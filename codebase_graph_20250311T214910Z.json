{
  "is_codebase": true,
  "last_crawled": "2025-03-11T21:48:37.194011Z",
  "tech_stack": {
    "dependencies": {
      "@expo/vector-icons": "^14.0.0",
      "@react-native-async-storage/async-storage": "1.23.1",
      "@shopify/flash-list": "1.7.3",
      "@supabase/supabase-js": "^2.48.1",
      "dotenv": "~16.4.5",
      "expo": "~52.0.36",
      "expo-blur": "^14.0.3",
      "expo-constants": "~17.0.7",
      "expo-dev-client": "~5.0.12",
      "expo-file-system": "~18.0.11",
      "expo-font": "~13.0.4",
      "expo-image": "~2.0.6",
      "expo-image-picker": "~16.0.6",
      "expo-linking": "~7.0.5",
      "expo-navigation-bar": "^4.0.8",
      "expo-router": "~4.0.17",
      "expo-status-bar": "~2.0.0",
      "metro-runtime": "0.81.1",
      "react": "18.3.1",
      "react-dom": "18.3.1",
      "react-native": "0.76.7",
      "react-native-css-transformer": "^2.0.0",
      "react-native-dotenv": "^3.4.11",
      "react-native-edge-to-edge": "^1.4.3",
      "react-native-gesture-handler": "~2.20.2",
      "react-native-nitro-modules": "^0.21.0",
      "react-native-qrcode-styled": "^0.3.3",
      "react-native-reanimated": "~3.16.1",
      "react-native-safe-area-context": "4.12.0",
      "react-native-screens": "~4.4.0",
      "react-native-svg": "15.8.0",
      "react-native-unistyles": "^3.0.0-beta.5",
      "react-native-url-polyfill": "^2.0.0",
      "react-native-web": "~0.19.13",
      "supabase": "^2.9.6",
      "zustand": "^5.0.2",
      "@jest/environment": "^29.7.0",
      "@jest/fake-timers": "^29.7.0",
      "@jest/globals": "^29.2.1",
      "@jest/source-map": "^29.6.3",
      "@jest/test-result": "^29.7.0",
      "@jest/transform": "^29.7.0",
      "@jest/types": "^29.6.3",
      "@types/node": "*",
      "chalk": "^4.0.0",
      "cjs-module-lexer": "^1.0.0",
      "collect-v8-coverage": "^1.0.0",
      "glob": "^7.1.3",
      "graceful-fs": "^4.2.9",
      "jest-haste-map": "^29.7.0",
      "jest-message-util": "^29.7.0",
      "jest-mock": "^29.7.0",
      "jest-regex-util": "^29.6.3",
      "jest-resolve": "^29.7.0",
      "jest-snapshot": "^29.7.0",
      "jest-util": "^29.7.0",
      "slash": "^3.0.0",
      "strip-bom": "^3.0.0",
      "fs.realpath": "^1.0.0",
      "inflight": "^1.0.4",
      "inherits": "2",
      "minimatch": "^3.1.1",
      "once": "^1.3.0",
      "path-is-absolute": "^1.0.0",
      "jest-diff": "^29.0.1",
      "jest-get-type": "^29.6.3",
      "pretty-format": "^29.7.0",
      "@xmldom/xmldom": "~0.7.7",
      "base64-js": "^1.3.1",
      "xmlbuilder": "^14.0.0",
      "@istanbuljs/schema": "^0.1.2",
      "expo-dev-launcher": "5.0.29",
      "expo-dev-menu": "6.0.19",
      "expo-dev-menu-interface": "1.9.3",
      "expo-manifests": "~0.15.5",
      "expo-updates-interface": "~1.0.0",
      "@babel/runtime": "^7.12.5",
      "simple-plist": "^1.1.0",
      "uuid": "^8.0.0",
      "through": "2",
      "node-int64": "^0.4.0",
      "is-arrayish": "^0.2.1",
      "detect-newline": "^3.0.0",
      "es-define-property": "^1.0.1",
      "es-errors": "^1.3.0",
      "gopd": "^1.0.1",
      "has-bigints": "^1.0.2",
      "is-bigint": "^1.1.0",
      "is-boolean-object": "^1.2.1",
      "is-number-object": "^1.1.1",
      "is-string": "^1.1.1",
      "is-symbol": "^1.0.4",
      "lru-cache": "^10.2.0",
      "lodash.debounce": "^4.0.8",
      "prop-types": "^15.7.2",
      "ts-object-utils": "0.0.5",
      "@types/istanbul-lib-report": "*",
      "@babel/parser": "^7.14.7",
      "@babel/types": "^7.25.2",
      "@types/istanbul-lib-coverage": "^2.0.0",
      "@types/tough-cookie": "*",
      "parse5": "^7.1.1",
      "@types/yargs-parser": "*",
      "undici-types": "~6.20.0",
      "@types/babel__generator": "*",
      "@types/babel__template": "*",
      "@types/babel__traverse": "^7.0.6",
      "invariant": "^2.2.4",
      "react-fast-compare": "^3.2.0",
      "shallowequal": "^1.1.0",
      "@types/hammerjs": "^2.0.36",
      "caniuse-lite": "^1.0.30001688",
      "electron-to-chromium": "^1.5.73",
      "node-releases": "^2.0.19",
      "update-browserslist-db": "^1.1.1",
      "is-plain-obj": "^2.1.0",
      "debug": "^2.2.0",
      "istanbul-lib-coverage": "^3.2.0",
      "source-map": "^0.5.6",
      "fetch-blob": "^3.1.4",
      "sax": ">=0.6.0",
      "indent-string": "^4.0.0",
      "strip-indent": "^3.0.0",
      "any-promise": "^1.0.0",
      "@pkgr/core": "^0.1.0",
      "tslib": "^2.0.3",
      "pngjs": "^5.0.0",
      "is-docker": "^2.0.0",
      "expo-image-loader": "~5.0.0",
      "escape-string-regexp": "^1.0.5",
      "call-bind": "^1.0.7",
      "call-bound": "^1.0.2",
      "get-intrinsic": "^1.2.5",
      "has-flag": "^3.0.0",
      "supports-color": "^7.1.0",
      "merge-stream": "^2.0.0",
      "charenc": "0.0.2",
      "crypt": "0.0.2",
      "is-buffer": "~1.1.6",
      "type-fest": "^0.20.2",
      "define-properties": "^1.2.1",
      "es-object-atoms": "^1.0.0",
      "defaults": "^1.0.3",
      "web-streams-polyfill": "^3.0.3",
      "pify": "^4.0.1",
      "semver": "^7.3.5",
      "@babel/core": "^7.11.6",
      "@babel/generator": "^7.7.2",
      "flow-enums-runtime": "^0.0.6",
      "metro": "0.81.1",
      "metro-babel-transformer": "0.81.1",
      "metro-cache": "0.81.1",
      "metro-cache-key": "0.81.1",
      "metro-minify-terser": "0.81.1",
      "metro-source-map": "0.81.1",
      "metro-transform-plugins": "0.81.1",
      "nullthrows": "^1.1.1",
      "ansi-regex": "^6.0.1",
      "@types/json5": "^0.0.29",
      "json5": "^2.2.3",
      "minimist": "^1.2.6",
      "@babel/template": "^7.3.3",
      "@babel/traverse": "^7.25.3",
      "find-up": "^5.0.0",
      "p-limit": "^3.1.0",
      "p-try": "^2.0.0",
      "locate-path": "^5.0.0",
      "path-exists": "^4.0.0",
      "p-locate": "^5.0.0",
      "error-stack-parser": "^2.0.6",
      "stack-generator": "^2.0.5",
      "stacktrace-gps": "^3.0.4",
      "which-typed-array": "^1.1.16",
      "functions-have-names": "^1.2.3",
      "hasown": "^2.0.2",
      "is-callable": "^1.2.7",
      "stackframe": "^1.3.4",
      "css": "^3.0.0",
      "css-mediaquery": "^0.1.2",
      "css-to-react-native": "^3.2.0",
      "html-escaper": "^2.0.0",
      "istanbul-lib-report": "^3.0.0",
      "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0",
      "del": "^6.0.0",
      "is-stream": "^2.0.0",
      "temp-dir": "^2.0.0",
      "unique-string": "~2.0.0",
      "rimraf": "^3.0.2",
      "loose-envify": "^1.1.0",
      "js-tokens": "^4.0.0",
      "is-wsl": "^1.1.0",
      "lighthouse-logger": "^1.0.0",
      "pkg-dir": "^3.0.0",
      "resolve-cwd": "^3.0.0",
      "@jridgewell/gen-mapping": "^0.3.5",
      "commander": "^2.20.0",
      "lines-and-columns": "^1.1.6",
      "mz": "^2.7.0",
      "pirates": "^4.0.6",
      "ts-interface-checker": "^0.1.9",
      "dunder-proto": "^1.0.1",
      "crypto-random-string": "^2.0.0",
      "@expo/spawn-async": "^1.7.2",
      "fast-glob": "^3.2.9",
      "fs-extra": "^9.1.0",
      "require-from-string": "^2.0.2",
      "resolve-from": "^5.0.0",
      "tmpl": "1.0.5",
      "@expo/config": "~10.0.10",
      "expo-json-utils": "~0.14.0",
      "@babel/highlight": "^7.10.4",
      "@babel/code-frame": "^7.12.13",
      "write-file-atomic": "^6.0.0",
      "@expo/config-plugins": "~9.0.15",
      "@expo/config-types": "^52.0.4",
      "@expo/json-file": "^9.0.2",
      "deepmerge": "^4.2.2",
      "getenv": "^1.0.0",
      "resolve-workspace-root": "^2.0.0",
      "slugify": "^1.6.6",
      "sucrase": "3.35.0",
      "no-case": "^3.0.4",
      "call-bind-apply-helpers": "^1.0.1",
      "set-function-length": "^1.2.2",
      "@jest/expect": "^29.7.0",
      "@jest/schemas": "^29.6.3",
      "@types/istanbul-reports": "^3.0.0",
      "@types/yargs": "^15.0.0",
      "@jest/console": "^29.7.0",
      "@jest/reporters": "^29.7.0",
      "ansi-escapes": "^6.0.0",
      "ci-info": "^3.2.0",
      "exit": "^0.1.2",
      "jest-changed-files": "^29.7.0",
      "jest-config": "^29.7.0",
      "jest-resolve-dependencies": "^29.7.0",
      "jest-runner": "^29.7.0",
      "jest-runtime": "^29.7.0",
      "jest-validate": "^29.7.0",
      "jest-watcher": "^29.0.0",
      "micromatch": "^4.0.4",
      "strip-ansi": "^7.0.1",
      "@sinonjs/fake-timers": "^10.0.2",
      "@sinclair/typebox": "^0.27.8",
      "@jridgewell/trace-mapping": "^0.3.25",
      "callsites": "^2.0.0",
      "@bcoe/v8-coverage": "^0.2.3",
      "istanbul-lib-instrument": "^5.0.4",
      "istanbul-lib-source-maps": "^4.0.0",
      "istanbul-reports": "^3.1.3",
      "jest-worker": "^29.6.3",
      "string-length": "^5.0.1",
      "v8-to-istanbul": "^9.0.1",
      "babel-plugin-istanbul": "^6.1.1",
      "convert-source-map": "^2.0.0",
      "fast-json-stable-stringify": "^2.0.0",
      "imurmurhash": "^0.1.4",
      "signal-exit": "^3.0.3",
      "expect": "^29.7.0",
      "has-symbols": "^1.1.0",
      "event-target-shim": "^5.0.1",
      "object-assign": "^4.1.0",
      "thenify-all": "^1.0.0",
      "cssom": "^0.5.0",
      "browserslist": "^4.24.0",
      "@react-native/normalize-colors": "0.76.7",
      "buffer": "*",
      "readable-stream": "^3.4.0",
      "yallist": "^4.0.0",
      "esrecurse": "^4.3.0",
      "estraverse": "^5.3.0",
      "@babel/plugin-transform-arrow-functions": "^7.24.7",
      "@babel/plugin-transform-class-properties": "^7.25.4",
      "@babel/plugin-transform-classes": "^7.25.4",
      "@babel/plugin-transform-nullish-coalescing-operator": "^7.24.7",
      "@babel/plugin-transform-optional-chaining": "^7.24.8",
      "@babel/plugin-transform-shorthand-properties": "^7.24.7",
      "@babel/plugin-transform-template-literals": "^7.0.0-0",
      "@babel/plugin-transform-unicode-regex": "^7.24.7",
      "@babel/preset-typescript": "^7.23.0",
      "@hapi/hoek": "^9.0.0",
      "@hapi/topo": "^5.1.0",
      "@sideway/address": "^4.1.5",
      "@sideway/formula": "^3.0.1",
      "@sideway/pinpoint": "^2.0.0",
      "es-abstract": "^1.23.2",
      "es-shim-unscopables": "^1.0.2",
      "define-data-property": "^1.1.4",
      "has-property-descriptors": "^1.0.2",
      "whatwg-url": "^5.0.0",
      "tr46": "~0.0.3",
      "webidl-conversions": "^3.0.0",
      "terser": "^5.15.0",
      "color-name": "1.1.3",
      "simple-swizzle": "^0.2.2",
      "object-inspect": "^1.13.3",
      "@rtsao/scc": "^1.1.0",
      "array-includes": "^3.1.8",
      "array.prototype.findlastindex": "^1.2.5",
      "array.prototype.flat": "^1.3.1",
      "array.prototype.flatmap": "^1.3.3",
      "doctrine": "^2.1.0",
      "eslint-import-resolver-node": "^0.3.9",
      "eslint-module-utils": "^2.12.0",
      "is-core-module": "^2.13.0",
      "is-glob": "^4.0.3",
      "object.fromentries": "^2.0.8",
      "object.groupby": "^1.0.3",
      "object.values": "^1.2.1",
      "string.prototype.trimend": "^1.0.9",
      "tsconfig-paths": "^3.15.0",
      "ms": "^2.1.3",
      "@babel/helper-define-polyfill-provider": "^0.6.3",
      "camelize": "^1.0.0",
      "css-color-keywords": "^1.0.0",
      "postcss-value-parser": "^4.2.0",
      "path-parse": "^1.0.5",
      "supports-preserve-symlinks-flag": "^1.0.0",
      "jquery": "^3.3.1",
      "resolve": "~1.7.1",
      "@my-scope/package-a": "^0.0.0",
      "@my-scope/package-b": "^0.0.0",
      "ajv": "^6.12.4",
      "espree": "^9.6.1",
      "globals": "^13.19.0",
      "ignore": "^5.2.0",
      "import-fresh": "^2.0.0",
      "js-yaml": "^3.13.1",
      "strip-json-comments": "^3.1.1",
      "fast-deep-equal": "^3.1.3",
      "json-schema-traverse": "^1.0.0",
      "uri-js": "^4.2.2",
      "@expo/image-utils": "^0.6.5",
      "md5-file": "^3.2.3",
      "@jest/core": "^29.7.0",
      "create-jest": "^29.7.0",
      "import-local": "^3.0.2",
      "yargs": "^15.3.1",
      "is-data-view": "^1.0.2",
      "function-bind": "^1.1.2",
      "is-arguments": "^1.0.4",
      "is-generator-function": "^1.0.10",
      "is-typed-array": "^1.1.14",
      "mdn-data": "2.0.30",
      "whatwg-encoding": "^2.0.0",
      "@jest/create-cache-key-function": "^29.2.1",
      "@react-native/assets-registry": "0.76.7",
      "@react-native/codegen": "0.76.7",
      "@react-native/community-cli-plugin": "0.76.7",
      "@react-native/gradle-plugin": "0.76.7",
      "@react-native/js-polyfills": "0.76.7",
      "@react-native/virtualized-lists": "0.76.7",
      "abort-controller": "^3.0.0",
      "anser": "^1.4.9",
      "babel-jest": "^29.7.0",
      "babel-plugin-syntax-hermes-parser": "^0.25.1",
      "jest-environment-node": "^29.7.0",
      "jsc-android": "^250231.0.0",
      "memoize-one": "^6.0.0",
      "mkdirp": "^1.0.3",
      "promise": "^7.1.1",
      "react-devtools-core": "^5.3.1",
      "react-refresh": "^0.14.2",
      "regenerator-runtime": "^0.14.0",
      "scheduler": "0.25.0-beta-4508873393-20240430",
      "stacktrace-parser": "^0.1.10",
      "whatwg-fetch": "^3.0.0",
      "ws": "^8.12.1",
      "has-tostringtag": "^1.0.2",
      "error-ex": "^1.3.1",
      "json-parse-even-better-errors": "^2.3.0",
      "source-map-resolve": "^0.6.0",
      "flat-cache": "^3.0.4",
      "fbjs": "^3.0.4",
      "@expo/env": "~0.4.2",
      "dotenv-expand": "~11.0.6",
      "@nodelib/fs.scandir": "2.1.5",
      "fastq": "^1.6.0",
      "@nodelib/fs.stat": "^2.0.2",
      "run-parallel": "^1.1.9",
      "hermes-estree": "0.25.1",
      "stream-buffers": "2.2.x",
      "ansi-styles": "^4.1.0",
      "string-width": "^4.2.3",
      "decode-uri-component": "^0.2.0",
      "filter-obj": "^1.1.0",
      "split-on-first": "^1.0.0",
      "strict-uri-encode": "^2.0.0",
      "object-keys": "^1.1.1",
      "safe-push-apply": "^1.0.0",
      "wrappy": "1",
      "get-proto": "^1.0.0",
      "which-builtin-type": "^1.2.1",
      "@babel/helper-plugin-utils": "^7.25.9",
      "@istanbuljs/load-nyc-config": "^1.0.0",
      "test-exclude": "^6.0.0",
      "regenerate": "^1.4.2",
      "regenerate-unicode-properties": "^10.2.0",
      "regjsgen": "^0.8.0",
      "regjsparser": "^0.12.0",
      "unicode-match-property-ecmascript": "^2.0.0",
      "unicode-match-property-value-ecmascript": "^2.1.0",
      "co": "^4.6.0",
      "dedent": "^1.0.0",
      "is-generator-fn": "^2.0.0",
      "jest-each": "^29.7.0",
      "jest-matcher-utils": "^29.7.0",
      "pure-rand": "^6.0.0",
      "stack-utils": "^2.0.3",
      "prettier-linter-helpers": "^1.0.0",
      "synckit": "^0.9.1",
      "safe-regex-test": "^1.1.0",
      "@0no-co/graphql.web": "^1.0.8",
      "wonka": "^6.3.2",
      "@urql/core": "^5.0.6",
      "recyclerlistview": "4.2.1",
      "unicode-canonical-property-names-ecmascript": "^2.0.0",
      "unicode-property-aliases-ecmascript": "^2.0.0",
      "safe-buffer": "5.2.1",
      "buffer-alloc": "^1.1.0",
      "kind-of": "^6.0.2",
      "@svgr/babel-preset": "8.1.0",
      "@svgr/hast-util-to-babel-ast": "8.0.0",
      "svg-parser": "^2.0.4",
      "camelcase": "^5.3.1",
      "cosmiconfig": "^5.0.5",
      "snake-case": "^3.0.4",
      "entities": "^4.5.0",
      "svgo": "^3.0.2",
      "@svgr/babel-plugin-add-jsx-attribute": "8.0.0",
      "@svgr/babel-plugin-remove-jsx-attribute": "8.0.0",
      "@svgr/babel-plugin-remove-jsx-empty-expression": "8.0.0",
      "@svgr/babel-plugin-replace-jsx-attribute-value": "8.0.0",
      "@svgr/babel-plugin-svg-dynamic-title": "8.0.0",
      "@svgr/babel-plugin-svg-em-dimensions": "8.0.0",
      "@svgr/babel-plugin-transform-react-native-svg": "8.1.0",
      "@svgr/babel-plugin-transform-svg-component": "8.0.0",
      "@typescript-eslint/eslint-plugin": "^8.9.0",
      "@typescript-eslint/parser": "^8.9.0",
      "eslint-import-resolver-typescript": "^3.6.3",
      "eslint-plugin-expo": "^0.1.0",
      "eslint-plugin-import": "^2.30.0",
      "eslint-plugin-react": "^7.36.1",
      "eslint-plugin-react-hooks": "^4.6.2",
      "object.assign": "^4.1.7",
      "strnum": "^1.0.5",
      "ast-types": "0.15.2",
      "esprima": "^4.0.0",
      "is-extglob": "^2.1.1",
      "path-key": "^3.1.0",
      "async-function": "^1.0.0",
      "char-regex": "^2.0.0",
      "buffer-from": "^1.0.0",
      "acorn": "^8.11.0",
      "acorn-walk": "^8.0.2",
      "color-convert": "^1.9.0",
      "color-string": "^1.9.0",
      "cli-cursor": "^3.1.0",
      "cli-spinners": "^2.5.0",
      "log-symbols": "^4.1.0",
      "wcwidth": "^1.0.1",
      "unique-slug": "^4.0.0",
      "flatted": "^3.2.9",
      "keyv": "^4.5.3",
      "universalify": "^0.2.0",
      "punycode": "^2.1.1",
      "path-type": "^4.0.0",
      "safer-buffer": ">= 2.1.2 < 3.0.0",
      "normalize-path": "^3.0.0",
      "picomatch": "^2.3.1",
      "nanoid": "3.3.8",
      "picocolors": "^1.1.1",
      "source-map-js": "^1.0.1",
      "domelementtype": "^2.3.0",
      "domhandler": "^5.0.3",
      "math-intrinsics": "^1.1.0",
      "json-buffer": "3.0.1",
      "exponential-backoff": "^3.1.1",
      "metro-core": "0.81.1",
      "@typescript-eslint/types": "^8.9.0",
      "@typescript-eslint/visitor-keys": "8.23.0",
      "ts-api-utils": "^2.0.1",
      "balanced-match": "^1.0.0",
      "brace-expansion": "^2.0.1",
      "@eslint-community/eslint-utils": "^4.2.0",
      "@typescript-eslint/scope-manager": "8.23.0",
      "@typescript-eslint/typescript-estree": "8.23.0",
      "@typescript-eslint/utils": "^8.9.0",
      "@eslint-community/regexpp": "^4.6.1",
      "@typescript-eslint/type-utils": "8.23.0",
      "graphemer": "^1.4.0",
      "natural-compare": "^1.4.0",
      "eslint-visitor-keys": "^3.4.3",
      "is-date-object": "^1.1.0",
      "array-buffer-byte-length": "^1.0.1",
      "arraybuffer.prototype.slice": "^1.0.4",
      "available-typed-arrays": "^1.0.7",
      "data-view-buffer": "^1.0.2",
      "data-view-byte-length": "^1.0.2",
      "data-view-byte-offset": "^1.0.1",
      "es-set-tostringtag": "^2.0.3",
      "es-to-primitive": "^1.3.0",
      "function.prototype.name": "^1.1.6",
      "get-symbol-description": "^1.1.0",
      "globalthis": "^1.0.4",
      "has-proto": "^1.2.0",
      "internal-slot": "^1.1.0",
      "is-array-buffer": "^3.0.4",
      "is-regex": "^1.2.1",
      "is-shared-array-buffer": "^1.0.4",
      "is-weakref": "^1.0.2",
      "own-keys": "^1.0.1",
      "regexp.prototype.flags": "^1.5.3",
      "safe-array-concat": "^1.1.3",
      "set-proto": "^1.0.0",
      "string.prototype.trim": "^1.2.10",
      "string.prototype.trimstart": "^1.0.8",
      "typed-array-buffer": "^1.0.3",
      "typed-array-byte-length": "^1.0.3",
      "typed-array-byte-offset": "^1.0.4",
      "typed-array-length": "^1.0.7",
      "unbox-primitive": "^1.1.0",
      "@react-navigation/elements": "^2.2.5",
      "color": "^4.2.3",
      "@react-navigation/routers": "^7.1.2",
      "query-string": "^7.1.3",
      "react-is": "^16.12.0 || ^17.0.0 || ^18.0.0",
      "use-latest-callback": "^0.2.1",
      "use-sync-external-store": "^1.2.2",
      "@react-navigation/core": "^7.3.1",
      "warn-once": "0.1.1",
      "@types/babel__core": "^7.1.14",
      "babel-preset-jest": "^29.6.3",
      "argparse": "^1.0.7",
      "@isaacs/cliui": "^8.0.2",
      "css-tree": "^1.1.3",
      "for-each": "^0.3.3",
      "possible-typed-array-names": "^1.0.0",
      "reflect.getprototypeof": "^1.0.9",
      "fast-diff": "^1.1.2",
      "boolbase": "^1.0.0",
      "css-what": "^6.1.0",
      "domutils": "^3.0.1",
      "nth-check": "^2.0.1",
      "@humanwhocodes/object-schema": "^2.0.3",
      "min-indent": "^1.0.0",
      "buffer-alloc-unsafe": "^1.1.0",
      "buffer-fill": "^1.0.0",
      "delayed-stream": "~1.0.0",
      "cross-spawn": "^7.0.3",
      "side-channel-map": "^1.0.1",
      "@svgr/core": "^8.1.0",
      "@svgr/plugin-jsx": "^8.1.0",
      "@svgr/plugin-svgo": "^8.1.0",
      "path-dirname": "^1.0.2",
      "queue-microtask": "^1.2.2",
      "yocto-queue": "^0.1.0",
      "@react-native/dev-middleware": "0.76.7",
      "@react-native/metro-babel-transformer": "0.76.7",
      "execa": "^5.0.0",
      "metro-config": "0.81.1",
      "node-fetch": "^2.7.0",
      "readline": "^1.3.0",
      "@isaacs/ttlcache": "^1.4.1",
      "@react-native/debugger-frontend": "0.76.7",
      "chrome-launcher": "^0.15.2",
      "chromium-edge-launcher": "^0.2.0",
      "connect": "^3.6.5",
      "open": "^8.0.4",
      "selfsigned": "^2.4.1",
      "serve-static": "^1.13.1",
      "@babel/plugin-proposal-export-default-from": "^7.24.7",
      "@babel/plugin-syntax-dynamic-import": "^7.8.3",
      "@babel/plugin-syntax-export-default-from": "^7.24.7",
      "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
      "@babel/plugin-syntax-optional-chaining": "^7.8.3",
      "@babel/plugin-transform-async-generator-functions": "^7.25.4",
      "@babel/plugin-transform-async-to-generator": "^7.24.7",
      "@babel/plugin-transform-block-scoping": "^7.25.0",
      "@babel/plugin-transform-computed-properties": "^7.24.7",
      "@babel/plugin-transform-destructuring": "^7.24.8",
      "@babel/plugin-transform-flow-strip-types": "^7.25.9",
      "@babel/plugin-transform-for-of": "^7.24.7",
      "@babel/plugin-transform-function-name": "^7.25.1",
      "@babel/plugin-transform-literals": "^7.25.2",
      "@babel/plugin-transform-logical-assignment-operators": "^7.24.7",
      "@babel/plugin-transform-modules-commonjs": "^7.25.9",
      "@babel/plugin-transform-named-capturing-groups-regex": "^7.24.7",
      "@babel/plugin-transform-numeric-separator": "^7.24.7",
      "@babel/plugin-transform-object-rest-spread": "^7.12.13",
      "@babel/plugin-transform-optional-catch-binding": "^7.24.7",
      "@babel/plugin-transform-parameters": "^7.22.15",
      "@babel/plugin-transform-private-methods": "^7.24.7",
      "@babel/plugin-transform-private-property-in-object": "^7.24.7",
      "@babel/plugin-transform-react-display-name": "^7.25.9",
      "@babel/plugin-transform-react-jsx": "^7.25.9",
      "@babel/plugin-transform-react-jsx-self": "^7.24.7",
      "@babel/plugin-transform-react-jsx-source": "^7.24.7",
      "@babel/plugin-transform-regenerator": "^7.24.7",
      "@babel/plugin-transform-runtime": "^7.24.7",
      "@babel/plugin-transform-spread": "^7.24.7",
      "@babel/plugin-transform-sticky-regex": "^7.24.7",
      "@babel/plugin-transform-typescript": "^7.25.9",
      "@react-native/babel-plugin-codegen": "0.76.7",
      "babel-plugin-transform-flow-enums": "^0.0.2",
      "hermes-parser": "0.25.1",
      "jscodeshift": "^0.14.0",
      "@react-native/babel-preset": "0.76.7",
      "@remix-run/web-blob": "^3.1.0",
      "@remix-run/web-file": "^3.1.0",
      "@remix-run/web-form-data": "^3.1.0",
      "@remix-run/web-stream": "^1.1.0",
      "@web3-storage/multipart-parser": "^1.0.0",
      "data-uri-to-buffer": "^4.0.0",
      "mrmime": "^1.0.0",
      "@remix-run/router": "1.22.0",
      "@types/cookie": "^0.6.0",
      "cookie": "^0.6.0",
      "set-cookie-parser": "^2.4.8",
      "turbo-stream": "2.4.0",
      "@remix-run/web-fetch": "^4.4.2",
      "cookie-signature": "^1.1.0",
      "source-map-support": "~0.5.20",
      "stream-slice": "^0.1.2",
      "undici": "^6.18.2",
      "@remix-run/server-runtime": "2.15.3",
      "web-encoding": "file:../..",
      "ansi-fragments": "^0.2.1",
      "dayjs": "^1.8.15",
      "decamelize": "^1.2.0",
      "wrap-ansi": "^7.0.0",
      "cliui": "^8.0.1",
      "get-caller-file": "^2.0.5",
      "require-directory": "^2.1.1",
      "require-main-filename": "^2.0.0",
      "set-blocking": "^2.0.0",
      "which-module": "^2.0.0",
      "y18n": "^5.0.5",
      "yargs-parser": "^21.1.1",
      "jest-pnp-resolver": "^1.2.2",
      "resolve.exports": "^2.0.3",
      "mime-db": ">= 1.43.0 < 2",
      "string-width-cjs": "npm:string-width@^4.2.0",
      "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
      "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0",
      "eastasianwidth": "^0.2.0",
      "emoji-regex": "^8.0.0",
      "component-type": "^1.2.1",
      "join-component": "^1.1.0",
      "vlq": "^1.0.0",
      "emittery": "^0.13.1",
      "@npmcli/fs": "^3.1.0",
      "fs-minipass": "^2.0.0",
      "minipass-collect": "^2.0.1",
      "minipass-flush": "^1.0.5",
      "minipass-pipeline": "^1.2.4",
      "p-map": "^4.0.0",
      "ssri": "^10.0.0",
      "tar": "^6.2.1",
      "unique-filename": "^3.0.0",
      "set-function-name": "^2.0.2",
      "mimic-fn": "^1.0.0",
      "@react-native-community/cli-tools": "15.1.3",
      "@react-native-community/cli-platform-apple": "15.1.3",
      "fast-xml-parser": "^4.4.1",
      "@react-native-community/cli-clean": "15.1.3",
      "@react-native-community/cli-config": "15.1.3",
      "@react-native-community/cli-debugger-ui": "15.1.3",
      "@react-native-community/cli-doctor": "15.1.3",
      "@react-native-community/cli-server-api": "15.1.3",
      "@react-native-community/cli-types": "15.1.3",
      "prompts": "^2.2.1",
      "jsonfile": "^4.0.0",
      "appdirsjs": "^1.2.4",
      "mime": "1.6.0",
      "ora": "^3.4.0",
      "shell-quote": "^1.6.1",
      "sudo-prompt": "^8.2.0",
      "bl": "^4.1.0",
      "is-interactive": "^1.0.0",
      "is-unicode-supported": "^0.1.0",
      "onetime": "^5.1.2",
      "restore-cursor": "^2.0.0",
      "@react-native-community/cli-platform-android": "15.1.3",
      "@react-native-community/cli-platform-ios": "15.1.3",
      "command-exists": "^1.2.4",
      "envinfo": "^7.13.0",
      "node-stream-zip": "^1.9.1",
      "yaml": "^2.2.1",
      "compression": "^1.7.4",
      "errorhandler": "^1.5.1",
      "nocache": "^3.0.1",
      "@react-native-community/cli-config-android": "15.1.3",
      "logkitty": "^0.7.1",
      "joi": "^17.2.1",
      "env-paths": "^2.2.1",
      "parse-json": "^5.2.0",
      "@react-native-community/cli-config-apple": "15.1.3",
      "@expo/cli": "0.22.18",
      "@expo/fingerprint": "0.11.11",
      "@expo/metro-config": "~0.19.11",
      "babel-preset-expo": "~12.0.9",
      "expo-asset": "~11.0.4",
      "expo-keep-awake": "~14.0.3",
      "expo-modules-autolinking": "2.0.8",
      "expo-modules-core": "2.2.2",
      "fbemitter": "^3.0.0",
      "whatwg-url-without-unicode": "8.0.0-3",
      "babel-plugin-jest-hoist": "^29.6.3",
      "babel-preset-current-node-syntax": "^1.0.0",
      "tapable": "^2.2.0",
      "accepts": "^1.3.8",
      "image-size": "^1.0.2",
      "jsc-safe-url": "^0.2.4",
      "lodash.throttle": "^4.1.1",
      "metro-file-map": "0.81.1",
      "metro-resolver": "0.81.1",
      "metro-symbolicate": "0.81.1",
      "metro-transform-worker": "0.81.1",
      "mime-types": "^2.1.12",
      "serialize-error": "^2.1.0",
      "throat": "^5.0.0",
      "which-boxed-primitive": "^1.1.0",
      "dijkstrajs": "^1.0.1",
      "at-least-node": "^1.0.0",
      "bin-links": "^5.0.0",
      "https-proxy-agent": "^5.0.1",
      "formdata-polyfill": "^4.0.10",
      "@isaacs/fs-minipass": "^4.0.0",
      "chownr": "^2.0.0",
      "minizlib": "^2.1.1",
      "marky": "^1.2.2",
      "make-dir": "^2.1.0",
      "concat-map": "0.0.1",
      "@types/json-schema": "^7.0.9",
      "ajv-formats": "^2.1.1",
      "ajv-keywords": "^5.1.0",
      "to-regex-range": "^5.0.1",
      "abab": "^2.0.6",
      "acorn-globals": "^7.0.0",
      "cssstyle": "^2.3.0",
      "data-urls": "^3.0.2",
      "decimal.js": "^10.4.2",
      "domexception": "^4.0.0",
      "escodegen": "^2.0.0",
      "form-data": "^3.0.1",
      "html-encoding-sniffer": "^3.0.0",
      "http-proxy-agent": "^5.0.0",
      "is-potential-custom-element-name": "^1.0.1",
      "nwsapi": "^2.2.2",
      "saxes": "^6.0.0",
      "symbol-tree": "^3.2.4",
      "tough-cookie": "^4.1.2",
      "w3c-xmlserializer": "^4.0.0",
      "whatwg-mimetype": "^3.0.0",
      "xml-name-validator": "^4.0.0",
      "asynckit": "^0.4.0",
      "combined-stream": "^1.0.8",
      "agent-base": "6",
      "react-shallow-renderer": "^16.15.0",
      "@trysound/sax": "0.2.0",
      "css-select": "^5.1.0",
      "csso": "^5.0.5",
      "jest-docblock": "^29.7.0",
      "jest-leak-detector": "^29.7.0",
      "xmlchars": "^2.2.0",
      "fontfaceobserver": "^2.1.0",
      "clone": "^1.0.2",
      "is-plain-object": "^2.0.4",
      "shallow-clone": "^3.0.0",
      "escape-html": "~1.0.3",
      "side-channel": "^1.1.0",
      "css-in-js-utils": "^3.1.0",
      "fast-loops": "^1.1.3",
      "is-async-function": "^2.0.0",
      "is-finalizationregistry": "^1.1.0",
      "isarray": "^2.0.5",
      "which-collection": "^1.0.2",
      "esutils": "^2.0.2",
      "caller-callsite": "^2.0.0",
      "depd": "2.0.0",
      "setprototypeof": "1.2.0",
      "statuses": "~1.5.0",
      "toidentifier": "1.0.1",
      "jsesc": "^3.0.2",
      "@babel/plugin-proposal-class-properties": "^7.13.0",
      "@babel/plugin-proposal-nullish-coalescing-operator": "^7.13.8",
      "@babel/plugin-proposal-optional-chaining": "^7.13.12",
      "@babel/preset-flow": "^7.13.13",
      "@babel/register": "^7.13.16",
      "babel-core": "^7.0.0-bridge.0",
      "flow-parser": "0.*",
      "neo-async": "^2.6.1",
      "node-dir": "^0.1.17",
      "recast": "^0.21.0",
      "temp": "^0.8.4",
      "negotiator": "~0.6.4",
      "@types/graceful-fs": "^4.1.3",
      "anymatch": "^3.0.3",
      "fb-watchman": "^2.0.0",
      "walker": "^1.0.7",
      "default-gateway": "^4.2.0",
      "ipaddr.js": "^1.9.0",
      "clean-stack": "^2.0.0",
      "commondir": "^1.0.1",
      "lower-case": "^2.0.2",
      "globby": "^11.0.1",
      "is-path-cwd": "^2.2.0",
      "is-path-inside": "^3.0.3",
      "acorn-loose": "^8.3.0",
      "@babel/helper-create-class-features-plugin": "^7.25.9",
      "@babel/helper-compilation-targets": "^7.22.6",
      "@babel/helper-string-parser": "^7.25.9",
      "@babel/helper-validator-identifier": "^7.25.9",
      "@babel/helper-annotate-as-pure": "^7.25.9",
      "@babel/helper-skip-transparent-expression-wrappers": "^7.25.9",
      "@babel/plugin-syntax-typescript": "^7.7.2",
      "@babel/helper-replace-supers": "^7.25.9",
      "@ampproject/remapping": "^2.2.0",
      "@babel/helper-module-transforms": "^7.26.0",
      "@babel/helpers": "^7.26.7",
      "@types/gensync": "^1.0.0",
      "gensync": "^1.0.0-beta.2",
      "@babel/plugin-syntax-decorators": "^7.25.9",
      "@babel/helper-module-imports": "^7.25.9",
      "babel-plugin-polyfill-corejs2": "^0.4.10",
      "babel-plugin-polyfill-corejs3": "^0.10.6",
      "babel-plugin-polyfill-regenerator": "^0.6.1",
      "@babel/helper-remap-async-to-generator": "^7.25.9",
      "@babel/helper-create-regexp-features-plugin": "^7.25.9",
      "@babel/helper-wrap-function": "^7.25.9",
      "clone-deep": "^4.0.1",
      "find-cache-dir": "^2.0.0",
      "@babel/plugin-syntax-flow": "^7.12.1",
      "@babel/plugin-syntax-jsx": "^7.7.2",
      "@babel/helper-member-expression-to-functions": "^7.25.9",
      "@babel/helper-optimise-call-expression": "^7.25.9",
      "@babel/compat-data": "^7.22.6",
      "@babel/helper-validator-option": "^7.25.9",
      "regenerator-transform": "^0.15.2",
      "regexpu-core": "^6.2.0",
      "@babel/plugin-transform-react-jsx-development": "^7.25.9",
      "@babel/plugin-transform-react-pure-annotations": "^7.25.9",
      "define-lazy-prop": "^2.0.0",
      "prelude-ls": "^1.2.1",
      "type-check": "^0.4.0",
      "@radix-ui/react-compose-refs": "1.0.0",
      "querystringify": "^2.1.1",
      "requires-port": "^1.0.0",
      "core-js-compat": "^3.38.0",
      "css-to-react-native-transform": "^2.0.0",
      "inline-style-prefixer": "^6.0.1",
      "styleq": "^0.1.3",
      "queue": "6.0.2",
      "side-channel-list": "^1.0.0",
      "side-channel-weakmap": "^1.0.2",
      "bytes": "3.1.2",
      "compressible": "~2.0.18",
      "on-headers": "~1.0.2",
      "vary": "~1.1.2",
      "end-of-stream": "^1.1.0",
      "iconv-lite": "0.6.3",
      "@supabase/node-fetch": "^2.6.14",
      "@supabase/auth-js": "2.67.3",
      "@supabase/functions-js": "2.4.4",
      "@supabase/postgrest-js": "1.18.1",
      "@supabase/realtime-js": "2.11.2",
      "@supabase/storage-js": "2.7.1",
      "@types/phoenix": "^1.5.4",
      "@types/ws": "^8.5.10",
      "@expo/bunyan": "^4.0.0",
      "@segment/loosely-validate-event": "^2.0.0",
      "fetch-retry": "^4.1.1",
      "md5": "^2.2.1",
      "remove-trailing-slash": "^0.1.0",
      "arg": "^5.0.2",
      "exec-async": "^2.2.0",
      "npm-package-arg": "^11.0.0",
      "split": "^1.0.1",
      "sprintf-js": "~1.0.2",
      "jimp-compact": "0.16.1",
      "parse-png": "^2.1.0",
      "xml2js": "0.6.0",
      "@remix-run/node": "^2.12.0",
      "@expo/code-signing-certificates": "^0.0.5",
      "@expo/devcert": "^1.1.2",
      "@expo/osascript": "^2.1.6",
      "@expo/package-manager": "^1.7.2",
      "@expo/plist": "^0.2.1",
      "@expo/prebuild-config": "^8.0.28",
      "@expo/rudder-sdk-node": "^1.1.1",
      "@expo/ws-tunnel": "^1.0.1",
      "@expo/xcpretty": "^4.3.0",
      "@urql/exchange-retry": "^1.3.0",
      "better-opn": "~3.0.2",
      "bplist-creator": "0.1.0",
      "bplist-parser": "0.3.1",
      "cacache": "^18.0.2",
      "env-editor": "^0.4.1",
      "freeport-async": "^2.0.0",
      "internal-ip": "^4.3.0",
      "node-forge": "^1",
      "pretty-bytes": "^5.6.0",
      "progress": "^2.0.3",
      "qrcode-terminal": "0.11.0",
      "requireg": "^0.2.2",
      "send": "0.19.0",
      "structured-headers": "^0.4.1",
      "tempy": "^0.7.1",
      "terminal-link": "^2.1.1",
      "application-config-path": "^0.1.0",
      "eol": "^0.9.1",
      "get-port": "^3.2.0",
      "lodash": "^4.17.19",
      "password-prompt": "^1.0.4",
      "tmp": "^0.0.33",
      "@expo/sdk-runtime-versions": "^1.0.0",
      "xcode": "^3.0.1",
      "lightningcss": "~1.27.0",
      "postcss": "~8.4.32",
      "ip-regex": "^2.1.0",
      "pump": "^3.0.0",
      "nice-try": "^1.0.4",
      "shebang-command": "^2.0.0",
      "which": "^2.0.1",
      "get-stream": "^6.0.0",
      "npm-run-path": "^4.0.1",
      "p-finally": "^1.0.0",
      "strip-eof": "^1.0.0",
      "isexe": "^2.0.0",
      "shebang-regex": "^3.0.0",
      "util": "^0.12.3",
      "escalade": "^3.1.1",
      "encodeurl": "~1.0.2",
      "parseurl": "~1.3.3",
      "destroy": "1.2.0",
      "etag": "~1.8.1",
      "fresh": "0.5.2",
      "http-errors": "2.0.0",
      "on-finished": "~2.3.0",
      "range-parser": "~1.2.1",
      "thenify": ">= 3.1.0 < 4",
      "deep-is": "^0.1.3",
      "word-wrap": "^1.2.5",
      "levn": "^0.4.1",
      "fast-levenshtein": "^2.0.6",
      "kleur": "^3.0.3",
      "sisteransi": "^1.0.5",
      "qrcode": "^1.5.4",
      "astral-regex": "^1.0.0",
      "is-fullwidth-code-point": "^3.0.0",
      "@jest/expect-utils": "^29.7.0",
      "cmd-shim": "^7.0.0",
      "npm-normalize-package-bin": "^4.0.0",
      "proc-log": "^4.0.0",
      "read-cmd-shim": "^5.0.0",
      "@types/stack-utils": "^2.0.0",
      "leven": "^3.1.0",
      "asap": "~2.0.3",
      "acorn-jsx": "^5.3.2",
      "is-map": "^2.0.3",
      "is-set": "^2.0.3",
      "is-weakmap": "^2.0.2",
      "is-weakset": "^2.0.3",
      "@eslint/eslintrc": "^2.1.4",
      "@eslint/js": "8.57.1",
      "@humanwhocodes/config-array": "^0.13.0",
      "@humanwhocodes/module-importer": "^1.0.1",
      "@nodelib/fs.walk": "^1.2.3",
      "@ungap/structured-clone": "^1.2.0",
      "eslint-scope": "^7.2.2",
      "esquery": "^1.4.2",
      "file-entry-cache": "^6.0.1",
      "glob-parent": "^5.1.2",
      "json-stable-stringify-without-jsonify": "^1.0.1",
      "lodash.merge": "^4.6.2",
      "optionator": "^0.9.3",
      "text-table": "^0.2.0",
      "foreground-child": "^3.1.0",
      "jackspeak": "^3.1.2",
      "package-json-from-dist": "^1.0.0",
      "path-scurry": "^1.11.1",
      "parent-module": "^1.0.0",
      "is-number": "^7.0.0",
      "@sinonjs/commons": "^3.0.0",
      "type-detect": "4.0.8",
      "colorette": "^1.0.7",
      "slice-ansi": "^2.0.0",
      "json-parse-better-errors": "^1.0.1",
      "caller-path": "^2.0.0",
      "is-directory": "^0.3.1",
      "redent": "^3.0.0",
      "human-signals": "^2.1.0",
      "strip-final-newline": "^2.0.0",
      "@jridgewell/source-map": "^0.3.3",
      "@jridgewell/resolve-uri": "^3.1.0",
      "@jridgewell/sourcemap-codec": "^1.4.10",
      "@jridgewell/set-array": "^1.2.1",
      "supports-hyperlinks": "^2.0.0",
      "get-package-type": "^0.1.0",
      "@nolyfill/is-core-module": "1.0.39",
      "enhanced-resolve": "^5.15.0",
      "get-tsconfig": "^4.7.5",
      "is-bun-module": "^1.0.2",
      "stable-hash": "^0.0.4",
      "braces": "^3.0.3",
      "array.prototype.findlast": "^1.2.5",
      "array.prototype.tosorted": "^1.1.4",
      "es-iterator-helpers": "^1.2.1",
      "jsx-ast-utils": "^2.4.1 || ^3.0.0",
      "object.entries": "^1.1.8",
      "string.prototype.matchall": "^4.0.12",
      "string.prototype.repeat": "^1.0.0",
      "finalhandler": "1.1.2",
      "utils-merge": "1.0.1",
      "@tootallnate/once": "2",
      "merge2": "^1.4.1",
      "isobject": "^3.0.1",
      "@expo/metro-runtime": "4.0.1",
      "@expo/server": "^0.5.1",
      "@radix-ui/react-slot": "1.0.1",
      "@react-navigation/bottom-tabs": "^7.2.0",
      "@react-navigation/native": "^7.0.14",
      "@react-navigation/native-stack": "^7.2.0",
      "client-only": "^0.0.1",
      "react-helmet-async": "^1.3.0",
      "react-native-helmet-async": "2.0.4",
      "react-native-is-edge-to-edge": "^1.1.6",
      "schema-utils": "^4.0.1",
      "server-only": "^0.0.1",
      "plist": "^3.0.5",
      "big-integer": "1.6.x",
      "reusify": "^1.0.4",
      "react-freeze": "^1.0.0",
      "hosted-git-info": "^7.0.0",
      "validate-npm-package-name": "^5.0.0",
      "unpipe": "~1.0.0",
      "ee-first": "1.1.1",
      "os-tmpdir": "~1.0.2",
      "deep-extend": "^0.6.0",
      "ini": "~1.3.0",
      "node-domexception": "^1.0.0",
      "iterator.prototype": "^1.1.4",
      "hyphenate-style-name": "^1.0.3",
      "dot-case": "^3.0.4",
      "dom-serializer": "^2.0.0",
      "psl": "^1.1.33",
      "url-parse": "^1.5.3",
      "cross-fetch": "^3.1.5",
      "fbjs-css-vars": "^1.0.0",
      "setimmediate": "^1.0.5",
      "ua-parser-js": "^1.0.35",
      "@babel/traverse--for-generate-function-map": "npm:@babel/traverse@^7.25.3",
      "ob1": "0.81.1",
      "jest-environment-jsdom": "^29.2.1",
      "jest-watch-select-projects": "^2.0.0",
      "jest-watch-typeahead": "2.2.1",
      "react-server-dom-webpack": "19.0.0-rc-6230622a1a-20240610",
      "react-test-renderer": "18.3.1",
      "stacktrace-js": "^2.0.2",
      "@egjs/hammerjs": "^2.0.17",
      "hoist-non-react-statics": "^3.3.0",
      "fill-range": "^7.1.1",
      "fast-uri": "^3.0.1",
      "nested-error-stacks": "~2.0.1",
      "rc": "~1.2.7",
      "string_decoder": "^1.1.1",
      "util-deprecate": "^1.0.1",
      "merge-options": "^3.0.4",
      "@babel/plugin-proposal-decorators": "^7.12.9",
      "@babel/plugin-transform-export-namespace-from": "^7.22.11",
      "@babel/preset-react": "^7.22.15",
      "babel-plugin-react-native-web": "~0.19.13",
      "diff-sequences": "^29.6.3",
      "makeerror": "1.0.12",
      "array-union": "^2.1.0",
      "dir-glob": "^3.0.1",
      "@babel/plugin-syntax-async-generators": "^7.8.4",
      "@babel/plugin-syntax-bigint": "^7.8.3",
      "@babel/plugin-syntax-class-properties": "^7.12.13",
      "@babel/plugin-syntax-class-static-block": "^7.14.5",
      "@babel/plugin-syntax-import-attributes": "^7.24.7",
      "@babel/plugin-syntax-import-meta": "^7.10.4",
      "@babel/plugin-syntax-json-strings": "^7.8.3",
      "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
      "@babel/plugin-syntax-numeric-separator": "^7.10.4",
      "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
      "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
      "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
      "@babel/plugin-syntax-top-level-await": "^7.14.5",
      "async-limiter": "~1.0.0",
      "@jest/test-sequencer": "^29.7.0",
      "jest-circus": "^29.7.0",
      "@types/node-forge": "^1.3.0",
      "@types/jsdom": "^20.0.0",
      "jsdom": "^20.0.0",
      "detect-libc": "^1.0.3",
      "aggregate-error": "^3.0.0",
      "ieee754": "^1.1.13",
      "jest-cli": "^29.7.0",
      "resolve-pkg-maps": "^1.0.0",
      "atob": "^2.1.2",
      "bser": "2.1.1"
    },
    "devDependencies": {
      "@babel/core": "^7.21.0",
      "@eslint/js": "^9.9.1",
      "@react-native-community/cli": "15.0.1",
      "@testing-library/jest-native": "^5.4.3",
      "@testing-library/react-native": "^12.5.1",
      "eslint": "=8.8.0",
      "eslint-config-expo": "^8.0.1",
      "eslint-config-prettier": "^8.6.0",
      "eslint-plugin-prettier": "^4.0.0",
      "eslint-plugin-react": "^7.32.2",
      "eslint-plugin-react-hooks": "^4.6.0",
      "globals": "^13.20.0",
      "jest": "^27.5.1",
      "jest-expo": "~52.0.4",
      "prettier": "^3.2.5",
      "react-native-svg-transformer": "^1.5.0",
      "react-test-renderer": "^18.2.0",
      "@jest/test-utils": "^29.7.0",
      "@types/glob": "^7.1.1",
      "@types/graceful-fs": "^4.1.3",
      "jest-environment-node": "^29.7.0",
      "ava": "^2.2.0",
      "tsd": "^0.7.4",
      "xo": "^0.27.2",
      "memfs": "^3.2.0",
      "mkdirp": "^3.0.0",
      "rimraf": "^5.0.1",
      "tap": "^18.7.2",
      "tick": "0.0.6",
      "standard": "^13.0.2",
      "tape": "^5.7.5",
      "sinon": "^14.0.0",
      "@types/node": "^20.12.11",
      "browserify": "^17.0.0",
      "mocha": "^6.1.4",
      "multiline": "^2.0.0",
      "zuul": "^3.0.0",
      "@stryker-mutator/core": "^5.2.2",
      "auto-changelog": "^2.4.0",
      "eslint-plugin-es5": "^1.5.0",
      "get-stream": "^6.0.0",
      "nodemon": "^2.0.12",
      "np": "^10.0.5",
      "xmltest": "^1.5.0",
      "yauzl": "^2.10.0",
      "coffee-coverage": "*",
      "coffeescript": "2.1.1",
      "coveralls": "^3.0.2",
      "istanbul": "^0.4.5",
      "nyc": "^10.3.2",
      "xpath": "*",
      "git-state": "*",
      "@babel/preset-env": "^7.20.2",
      "babel-jest": "^29.0.0",
      "codecov": "^3.8.3",
      "standard-version": "^2.2.1",
      "commander": "^2.9.0",
      "cross-env": "^7.0.3",
      "eslint-config-digitalbazaar": "^2.8.0",
      "express": "^4.17.1",
      "karma": "^3.1.4",
      "karma-browserify": "^6.0.0",
      "karma-chrome-launcher": "^2.2.0",
      "karma-edge-launcher": "^0.4.2",
      "karma-firefox-launcher": "^2.1.2",
      "karma-ie-launcher": "^1.0.0",
      "karma-mocha": "^1.3.0",
      "karma-mocha-reporter": "^2.2.5",
      "karma-safari-launcher": "^1.0.0",
      "karma-sauce-launcher": "^1.2.0",
      "karma-sourcemap-loader": "^0.3.8",
      "karma-tap-reporter": "0.0.6",
      "karma-webpack": "^5.0.0",
      "mocha-lcov-reporter": "^1.2.0",
      "nodejs-websocket": "^1.7.1",
      "opts": "^1.2.7",
      "webpack": "^1.12.0",
      "webpack-cli": "4.9.0",
      "worker-loader": "^2.0.0",
      "flex-sdk": "",
      "expo-module-scripts": "^4.0.4",
      "expo-test-runner": "0.1.1",
      "@semantic-release/changelog": "^6.0.1",
      "@semantic-release/exec": "^6.0.3",
      "@semantic-release/git": "^10.0.1",
      "conventional-changelog-conventionalcommits": "^7.0.2",
      "eslint-config-sanity": "^7.1.2",
      "rollup": "^2.79.1",
      "semantic-release": "^19.0.3",
      "@babel/cli": "^7.8.4",
      "@babel/plugin-transform-runtime": "^7.22.15",
      "nodeunit": "0.9.x",
      "pegjs": "^0.10.0",
      "@commitlint/cli": "11.0.0",
      "@commitlint/config-conventional": "11.0.0",
      "@rollup/plugin-node-resolve": "^14.1.0",
      "@wdio/browserstack-service": "5.18.7",
      "@wdio/cli": "^8.24.0",
      "@wdio/jasmine-framework": "5.18.6",
      "@wdio/local-runner": "^8.24.0",
      "@wdio/spec-reporter": "^8.24.0",
      "@wdio/static-server-service": "5.16.10",
      "@wdio/sync": "5.18.7",
      "babel-eslint": "^10.1.0",
      "babel-plugin-add-module-exports": "^1.0.4",
      "bundlewatch": "0.3.1",
      "husky": "^4.2.3",
      "lint-staged": "^15.1.0",
      "npm-run-all": "^4.1.5",
      "rollup-plugin-terser": "^7.0.2",
      "runmd": "1.3.2",
      "asynct": "*",
      "event-stream": "~3.0.2",
      "it-is": "1",
      "stream-spec": "~0.3.5",
      "ubelt": "~2.9",
      "string-to-stream": "~1.0.0",
      "faucet": "~0.0.1",
      "pre-commit": "^1.2.2",
      "coffee-script": "~1.12.6",
      "should": "^13.2.3",
      "@zeit/eslint-config-node": "^0.3.0",
      "@zeit/git-hooks": "^0.1.4",
      "c8": "^7.12.0",
      "eslint-plugin-node-core": "iansu/eslint-plugin-node-core",
      "@ljharb/eslint-config": "^21.1.0",
      "@types/call-bind": "^1.0.5",
      "@types/define-properties": "^1.1.5",
      "@types/es-value-fixtures": "^1.4.4",
      "@types/for-each": "^0.3.3",
      "@types/get-intrinsic": "^1.2.3",
      "@types/gopd": "^1.0.3",
      "@types/has-property-descriptors": "^1.0.3",
      "@types/object-inspect": "^1.13.0",
      "@types/object.getownpropertydescriptors": "^2.1.4",
      "@types/tape": "^5.8.1",
      "aud": "^2.0.4",
      "es-value-fixtures": "^1.4.2",
      "evalmd": "^0.0.19",
      "for-each": "^0.3.3",
      "hasown": "^2.0.2",
      "in-publish": "^2.0.1",
      "npmignore": "^0.3.1",
      "object-inspect": "^1.13.1",
      "object.getownpropertydescriptors": "^2.1.1",
      "reflect.ownkeys": "^1.1.4",
      "safe-publish-latest": "^2.0.0",
      "typescript": "^5.4.3",
      "@arethetypeswrong/cli": "^0.17.1",
      "@ljharb/tsconfig": "^0.2.3",
      "encoding": "^0.1.13",
      "has-tostringtag": "^1.0.2",
      "eslint-config-standard": "15.0.1",
      "eslint-plugin-import": "2.25.4",
      "eslint-plugin-node": "11.1.0",
      "eslint-plugin-promise": "5.1.1",
      "eslint-plugin-standard": "4.1.0",
      "grunt": "~0.4.1",
      "grunt-cli": "^1.2.0",
      "grunt-template": "^0.2.3",
      "regenerate": "^1.4.0",
      "requirejs": "^2.3.2",
      "unicode-13.0.0": "0.8.0",
      "babel-core": "^7.0.0-bridge.0",
      "babel-plugin-istanbul": "^4.1.6",
      "decache": "^4.6.2",
      "mock-require": "3.0.3",
      "rewire": "~4.0.1",
      "@npmcli/eslint-config": "^4.0.0",
      "@npmcli/template-oss": "4.22.0",
      "@types/lodash.debounce": "^4.0.9",
      "@types/prop-types": "15.5.2",
      "@types/react": "^16.9.35",
      "@types/react-native": "^0.71.0",
      "@types/resize-observer-browser": "0.1.7",
      "file-directives": "1.4.6",
      "tslint": "^5.20.1",
      "eslint-plugin-mocha": "^8.0.0",
      "intelli-espower-loader": "^1.0.1",
      "power-assert": "^1.6.1",
      "connect": "^3.4.0",
      "supertest": "4.0.2",
      "ipjs": "^5.0.3",
      "playwright-test": "2.1.0",
      "web-streams-polyfill": "^3.1.0",
      "@vitest/eslint-plugin": "^1.1.25",
      "cheerio": "^0.22.0",
      "eslint-plugin-jest": "^27.0.0",
      "execa": "^3.2.0",
      "get-port": "^7.1.0",
      "npm-run-all2": "^6.2.2",
      "outdent": "^0.8.0",
      "puppeteer": "^12.0.1",
      "shelljs": "^0.8.5",
      "type-fest": "^4.32.0",
      "jshint": "2.10.3",
      "jslint": "*",
      "@remix-run/eslint-config": "2.3.1",
      "@testing-library/jest-dom": "^5.16.5",
      "@testing-library/react": "^15.0.7",
      "@types/eslint": "^8.44.7",
      "@types/invariant": "^2.2.35",
      "@types/jsdom": "^16.2.15",
      "@types/shallowequal": "1.1.5",
      "@vitejs/plugin-react": "4.2.0",
      "esbuild": "^0.19.8",
      "jsdom": "^21.1.0",
      "raf": "3.4.1",
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "tsx": "4.7.1",
      "vite": "^6.0.2",
      "vitest": "^2.1.3",
      "@fast-check/jest": "^1.3.0",
      "benchmark": "^2.1.4",
      "diff": "^7.0.0",
      "@babel/plugin-proposal-class-properties": "^7.12.1",
      "@babel/plugin-transform-object-assign": "^7.0.0",
      "babel-plugin-no-side-effect-class-properties": "0.0.4",
      "bannerize": "^1.0.2",
      "blanket": "^1.2.3",
      "changelogplease": "^1.2.0",
      "ember-suave": "^4.0.0",
      "git-tags": "^0.2.4",
      "hammer-simulator": "git://github.com/hammerjs/simulator#master",
      "jquery": "^3.1.0",
      "jquery-hammerjs": "2.0.x",
      "jscs": "^3.0.7",
      "jshint-stylish": "^2.2.0",
      "lodash-compat": "^3.10.2",
      "node-qunit-phantomjs": "^1.4.0",
      "print-sizes": "^0.1.0",
      "qunitjs": "~1.11.0",
      "rollup-plugin-analyzer": "^2.1.0",
      "rollup-plugin-babel": "^4.3.3",
      "rollup-plugin-replace": "^2.2.0",
      "rollup-plugin-uglify": "^3.0.0",
      "run-when-changed": "^1.2.0",
      "serve": "^14.2.1",
      "uglify-js": "^3.11.3",
      "eslint-plugin-markdown": "2.2.1",
      "chai": "^4.3.4",
      "ts-node": "^10.9.2",
      "@types/google-closure-compiler": "^0.0.19",
      "google-closure-compiler": "=v20220502",
      "docco": ">=0.6.2",
      "zap": ">=0.2.9 <1",
      "bluebird": "3.7.2",
      "@expo/config-plugins": "^7.0.0 || ^8.0.0 || ^9.0.0",
      "prettier-plugin-organize-imports": "^4.1.0",
      "react-native": "^0.71.0",
      "react-native-builder-bob": "^0.18.0",
      "buffer-equal": "1.0.0",
      "serve-static": "^1.10.0",
      "tap-dot": "^2.0.0",
      "@microsoft/api-extractor": "^7.39.1",
      "@rollup/plugin-inject": "^5.0.5",
      "@rollup/plugin-replace": "^2.3.0",
      "@rollup/plugin-strip": "^3.0.4",
      "@rollup/plugin-terser": "^0.1.0",
      "@rollup/plugin-typescript": "^11.1.6",
      "@typescript-eslint/eslint-plugin": "^5.21.0",
      "@typescript-eslint/parser": "^5.21.0",
      "@ungap/promise-all-settled": "^1.1.2",
      "downlevel-dts": "*",
      "jasmine": "^4.1.0",
      "micromatch": "^4.0.4",
      "minimist": "^1.2.0",
      "playwright": "^1.40.1",
      "recursive-readdir": "^2.2.2",
      "ts-morph": "^10.0.2",
      "tslib": "^2.2.0",
      "wpt-runner": "^5.0.0",
      "events": "^1.0.1",
      "knox": "^0.8.10",
      "mr": "^2.0.5",
      "opener": "^1.5.2",
      "q": "^1.0.0",
      "q-io": "^2.0.3",
      "saucelabs": "^0.1.1",
      "wd": "^0.2.21",
      "weak-map": "^1.0.5",
      "@types/pngjs": "^6.0.5",
      "file-type": "^7.2.0",
      "phantomjs-prebuilt": "^2.1.7",
      "clear-module": "^4.0.0",
      "proxyquire": "^2.1.0",
      "@testing-library/user-event": "^14.5.2",
      "@babel/eslint-parser": "7.22.15",
      "@babel/plugin-syntax-flow": "^7.26.0",
      "@babel/preset-flow": "^7.25.9",
      "@babel/types": "^7.25.9",
      "eslint-plugin-flowtype": "^8.0.3",
      "flow-bin": "^0.99.0",
      "nested-error-stacks": "^2.1.0",
      "pify": "^5.0.0",
      "source-map-support": "^0.4.2",
      "expect.js": "~0.3.1",
      "available-typed-arrays": "^1.0.7",
      "@tsd/typescript": "^5.0.4",
      "@types/merge-stream": "^1.1.2",
      "@types/supports-color": "^8.1.0",
      "jest-leak-detector": "^29.7.0",
      "tsd-lite": "^0.7.0",
      "worker-farm": "^1.6.0",
      "import-fresh": "^2.0.0",
      "@types/jest": "^27.4.1",
      "abort-controller": "^1.1.0",
      "ts-jest": "^27.1.4",
      "project-repl": "^1.5.0",
      "@babel/register": "^7.4.4",
      "cpy-cli": "^5.0.0",
      "rollup-plugin-commonjs": "^8.2.6",
      "rollup-plugin-node-resolve": "^3.0.0",
      "@sindresorhus/tsconfig": "~0.7.0",
      "eslint-config-xo-typescript": "^0.14.0",
      "@es-shims/api": "^2.4.2",
      "functions-have-names": "^1.2.3",
      "has-strict-mode": "^1.0.1",
      "@eslint-community/eslint-plugin-eslint-comments": "^4.4.1",
      "@phenomnomnominal/tsquery": "^6.1.3",
      "@release-it/conventional-changelog": "^8.0.1",
      "@types/eslint-plugin-markdown": "^2.0.2",
      "@typescript/vfs": "^1.6.0",
      "@vitest/coverage-v8": "^2.0.5",
      "console-fail-test": "^0.2.3",
      "cspell": "^8.0.0",
      "eslint-plugin-jsdoc": "^46.9.0",
      "eslint-plugin-jsonc": "^2.10.0",
      "eslint-plugin-n": "^16.3.1",
      "eslint-plugin-package-json": "^0.19.0",
      "eslint-plugin-perfectionist": "^2.3.0",
      "eslint-plugin-regexp": "^2.1.1",
      "eslint-plugin-yml": "^1.10.0",
      "jsonc-eslint-parser": "^2.4.0",
      "knip": "^2.41.0",
      "markdownlint": "^0.31.1",
      "markdownlint-cli": "^0.37.0",
      "prettier-plugin-curly": "^0.1.3",
      "prettier-plugin-packagejson": "^2.4.6",
      "release-it": "^17.0.0",
      "sentences-per-line": "^0.3.0",
      "should-semantic-release": "^0.2.1",
      "tsup": "^7.2.0",
      "typedoc": "^0.25.12",
      "typedoc-plugin-coverage": "^3.4.1",
      "typedoc-plugin-custom-validation": "^2.0.2",
      "typedoc-plugin-konamimojisplosion": "^0.0.2",
      "typedoc-plugin-mdn-links": "^4.0.10",
      "typescript-eslint": "^8.4.0",
      "gulp-format-md": "^1.0.0",
      "tsd-check": "^0.3.0",
      "graceful-fs": "^4.1.15",
      "path-type": "^4.0.0",
      "tempy": "^0.3.0",
      "@react-native/metro-babel-transformer": "0.73.11",
      "metro-memory-fs": "0.81.1",
      "@types/minimist": "^1.2.0",
      "@types/strip-bom": "^3.0.0",
      "@types/strip-json-comments": "^0.0.30",
      "babel-cli": "^6.26.0",
      "babel-plugin-external-helpers": "^6.22.0",
      "babel-preset-env": "1.4.0",
      "babel-register": "^6.16.3",
      "babelrc-rollup": "^3.0.0",
      "del": "^2.2.0",
      "unicode-9.0.0": "~0.7.0",
      "@babel/code-frame": "^7.26.2",
      "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
      "@babel/plugin-transform-flow-strip-types": "^7.25.9",
      "@babel/plugin-transform-modules-commonjs": "^7.2.0",
      "babel-plugin-tester": "^11.0.4",
      "metro": "0.81.1",
      "delay": "^4.1.0",
      "in-range": "^2.0.0",
      "time-span": "^3.1.0",
      "random-int": "^2.0.0",
      "is-path-inside": "^2.1.0",
      "colors": "^1.4.0",
      "es6-promise": "^3.0.0",
      "gulp": "^4.0.2",
      "gulp-concat": "^2.6.0",
      "gulp-rename": "^2.0.0",
      "gulp-sourcemaps": "^1.12.0",
      "gulp-uglify": "^1.5.1",
      "jasmine-ajax": "^3.3.1",
      "jasmine-core": "^4.1.1",
      "jsdoc-dash-template": "^2.1.0",
      "json3": "^3.3.2",
      "karma-coverage": "^1.1.1",
      "karma-coveralls": "^2.1.0",
      "karma-jasmine": "^4.0.2",
      "karma-jasmine-ajax": "^0.1.13",
      "karma-opera-launcher": "^1.0.0",
      "karma-phantomjs-launcher": "^1.0.2",
      "karma-spec-reporter": "^0.0.34",
      "run-sequence": "^1.1.5",
      "vinyl-buffer": "^1.0.0",
      "vinyl-source-stream": "^1.1.0",
      "@types/is-callable": "^1.1.2",
      "@types/make-arrow-function": "^1.2.2",
      "@types/make-generator-function": "^2.0.3",
      "is-callable": "^1.2.7",
      "make-arrow-function": "^1.2.0",
      "make-generator-function": "^2.0.0",
      "eclint": "^2.8.1",
      "make-async-function": "^1.0.0",
      "uglify-register": "^1.0.1",
      "uglify-es": "^3.3.9",
      "doctoc": "^0.15.0",
      "@babel/preset-react": "^7.8.3",
      "babel-loader": "^9.1.2",
      "is-windows": "^1.0.2",
      "istanbul-lib-coverage": "^3.0.0",
      "path-exists": "^4.0.0",
      "touch": "^3.1.0",
      "@rollup/plugin-babel": "^6.0.3",
      "@ungap/structured-clone": "^1.2.0",
      "ascjs": "^3.1.2",
      "circular-json": "^0.5.9",
      "circular-json-es6": "^2.0.2",
      "jsan": "^3.1.14",
      "terser": "^5.16.6",
      "envify": "^3.4.0",
      "@types/mocha": "^10.0.1",
      "@types/sinon": "^7.5.0",
      "clang-format": "^1.8.0",
      "cpy": "^7.0.1",
      "@jridgewell/trace-mapping": "^0.3.20",
      "@types/mz": "^2.7.4",
      "chalk": "^4.0.0",
      "eslint-config-airbnb-base": "^15.0.0",
      "sucrase": "^3.34.0",
      "test262-harness": "^10.0.0",
      "ts-interface-builder": "^0.3.3",
      "gopd": "^1.2.0",
      "reflect.getprototypeof": "^1.0.7",
      "react-refresh": "^0.14.0",
      "@types/fs-extra": "^9.0.1",
      "minimatch": "^5.0.1",
      "@types/debug": "4",
      "@types/semver": "^7.3.13",
      "@types/ws": "^8.5.10",
      "async-listen": "^3.0.0",
      "eslint-config-airbnb": "17.1.0",
      "eslint-import-resolver-typescript": "1.1.1",
      "eslint-plugin-jsx-a11y": "6.2.1",
      "semver": "^7.5.3",
      "ws": "^8.18.0",
      "strip-ansi": "^6.0.0",
      "@types/babel__code-frame": "^7.0.0",
      "@types/json5": "^2.2.0",
      "@types/write-file-atomic": "^2.1.1",
      "@types/require-from-string": "^1.2.3",
      "@size-limit/preset-small-lib": "^2.2.1",
      "tslint-config-prettier": "^1.18.0",
      "tslint-config-standard": "^9.0.0",
      "@types/react-test-renderer": "^17.0.0",
      "eslint-config-standard-react": "^9.2.0",
      "microbundle-crl": "^0.13.10",
      "react-scripts": "^3.4.1",
      "livescript": "^1.6.0",
      "@jest/test-sequencer": "^29.7.0",
      "@types/exit": "^0.1.30",
      "@types/micromatch": "^4.0.1",
      "@types/sinonjs__fake-timers": "^8.1.2",
      "jest-util": "^29.7.0",
      "jest-haste-map": "^29.7.0",
      "jest-resolve": "^29.7.0",
      "@types/istanbul-lib-coverage": "^2.0.0",
      "@types/istanbul-lib-instrument": "^1.7.2",
      "@types/istanbul-lib-report": "^3.0.0",
      "@types/istanbul-lib-source-maps": "^4.0.0",
      "@types/istanbul-reports": "^3.0.0",
      "@types/node-notifier": "^8.0.0",
      "mock-fs": "^5.1.2",
      "node-notifier": "^10.0.0",
      "clone": "^2.1.2",
      "debug": "^4.1.1",
      "documentation": "^12.1.4",
      "js-yaml": "^3.13.1",
      "nopt": "^4.0.1",
      "@types/babel__core": "^7.1.14",
      "@types/convert-source-map": "^2.0.0",
      "dedent": "^1.5.3",
      "immutable": "^4.0.0",
      "jest-matcher-utils": "^29.7.0",
      "@types/has-symbols": "^1.0.2",
      "core-js": "^3.29.0",
      "get-own-property-symbols": "^0.9.5",
      "@mysticatea/eslint-plugin": "^8.0.1",
      "@mysticatea/spy": "^0.1.2",
      "assert": "^2.0.0",
      "dts-bundle-generator": "^2.0.0",
      "karma-growl-reporter": "^1.0.0",
      "karma-rollup-preprocessor": "^7.0.0-rc.2",
      "rollup-plugin-babel-minify": "^7.0.0",
      "rollup-plugin-sourcemaps": "^0.6.3",
      "rollup-plugin-typescript": "^1.0.1",
      "rollup-watch": "^4.3.1",
      "type-tester": "^1.0.0",
      "babel-generator": "~6.26.1",
      "babel-traverse": "~6.26.0",
      "babel-types": "~6.26.0",
      "babylon": "^6.18.0",
      "request": "^2.88.0",
      "resolve": "~1.11.1",
      "matcha": "^0.7.0",
      "@types/tap": "^15.0.8",
      "marked": "^4.0.8",
      "tshy": "^1.14.0",
      "react-17": "npm:react@^17",
      "react-dom-17": "npm:react-dom@^17",
      "end-of-stream": "^1.4.0",
      "through2": "^4.0.2",
      "eslint-config-eslint": "file:packages/eslint-config-eslint",
      "eslint-release": "^1.0.0",
      "eslint-visitor-keys": "^3.3.0",
      "espree": "^3.5.4",
      "npm-license": "^0.3.1",
      "expect-type": "^0.12.0",
      "@react-native/babel-preset": "^0.74.85",
      "@react-native/eslint-config": "^0.72.2",
      "@react-native/metro-config": "0.76.4",
      "@react-native/typescript-config": "0.76.4",
      "@testing-library/react-hooks": "^8.0.0",
      "@types/babel__generator": "^7.6.4",
      "@types/babel__traverse": "^7.14.2",
      "@typescript-eslint/rule-tester": "^8.9.0",
      "axios": "^1.7.4",
      "babel-plugin-module-resolver": "^5.0.0",
      "code-tag": "^1.1.0",
      "eslint-import-resolver-babel-module": "^5.2.0",
      "eslint-plugin-no-inline-styles": "^1.0.5",
      "eslint-plugin-reanimated": "workspace:*",
      "eslint-plugin-tsdoc": "^0.2.17",
      "madge": "^6.1.0",
      "react-native-gesture-handler": "^2.13.3",
      "react-native-web": "~0.18.10",
      "ts-prune": "^0.10.3",
      "beautify-benchmark": "0.2.4",
      "safe-buffer": "5.1.2",
      "uid-safe": "2.1.5",
      "@hapi/bourne": "2.x.x",
      "@hapi/code": "8.x.x",
      "@hapi/joi-legacy-test": "npm:@hapi/joi@15.x.x",
      "@hapi/lab": "^24.0.0",
      "covert": "^1.1.1",
      "function-bind": "^1.1.1",
      "cli-color": "~0.2.3",
      "bundt": "1.1.1",
      "esm": "3.2.25",
      "uvu": "^0.5.6",
      "@ungap/url-search-params": "^0.1.2",
      "abortcontroller-polyfill": "^1.1.9",
      "babel-plugin-transform-async-generator-functions": "^6.24.1",
      "babel-polyfill": "^6.23.0",
      "chai-as-promised": "^7.1.1",
      "chai-iterator": "^1.1.1",
      "chai-string": "~1.3.0",
      "form-data": "^4.0.0",
      "is-builtin-module": "^1.0.0",
      "parted": "^0.1.1",
      "promise": "^7.0.0",
      "resumer": "0.0.0",
      "string-to-arraybuffer": "^1.0.2",
      "teeny-request": "3.7.0",
      "recast": "^0.22.0",
      "webidl2js": "^3.0.2",
      "deep-equal": "1.0.1",
      "fast-stable-stringify": "latest",
      "faster-stable-stringify": "latest",
      "json-stable-stringify": "latest",
      "@angular-eslint/template-parser": "^13.5.0",
      "@eslint/import-test-order-redirect-scoped": "file:./tests/files/order-redirect-scoped",
      "@test-scope/some-module": "file:./tests/files/symlinked-module",
      "babel-preset-airbnb": "^2.6.0",
      "babel-preset-flow": "^6.23.0",
      "escope": "^3.6.0",
      "eslint-doc-generator": "^1.7.1",
      "eslint-import-resolver-node": "file:./resolvers/node",
      "eslint-import-resolver-webpack": "file:./resolvers/webpack",
      "eslint-import-test-order-redirect": "file:./tests/files/order-redirect",
      "eslint-module-utils": "file:./utils",
      "eslint-plugin-eslint-plugin": "^2.3.0 || ^3.5.3 || ^4.0.1 || ^5.0.5",
      "eslint-plugin-json": "3.1.0",
      "find-babel-config": "=1.2.0",
      "fs-copy-file-sync": "^1.1.1",
      "glob": "^7.1.2",
      "jackspeak": "=2.1.1",
      "jsonc-parser": "=3.2.0",
      "linklocal": "^2.8.2",
      "lodash.isarray": "^4.0.0",
      "npm-which": "^3.0.1",
      "redux": "^4.2.1",
      "typescript-eslint-parser": "^20.1.1",
      "concurrently": "^8.2.2",
      "karma-chai": "^0.1.0",
      "array.prototype.map": "^1.0.6",
      "object-keys": "^1.0.11",
      "@babel/helper-plugin-test-runner": "^7.22.5",
      "@babel/plugin-transform-regenerator": "~7.14.0",
      "semistandard": "^11.0.0",
      "copy-dir": "^1.3.0",
      "mv": "^2.1.1",
      "tmp": "^0.0.31",
      "lerna": "^3.4.3",
      "@babel/plugin-proposal-unicode-property-regex": "^7.2.0",
      "array-uniq": "^2.1.0",
      "emoji.json": "^12.1.1",
      "eslint-config-richienb": "^0.3.0",
      "unicode-chars": "^1.0.1",
      "fs-teardown": "^0.1.3",
      "temp-dir": "^2.0.0",
      "ajv-async": "^1.0.0",
      "brfs": "^2.0.1",
      "del-cli": "^6.0.0",
      "dot": "^1.1.2",
      "gh-pages-generator": "^0.2.3",
      "if-node-version": "^1.1.1",
      "js-beautify": "^1.15.1",
      "json-schema-test": "^2.0.0",
      "require-globify": "^1.3.0",
      "watch": "^1.0.0",
      "@types/yargs": "^17.0.8",
      "@babel/plugin-transform-export-namespace-from": "^7.23.4",
      "@react-navigation/bottom-tabs": "^7.2.0",
      "@react-navigation/core": "7.0.0",
      "@react-navigation/native": "^5.8.0",
      "@react-navigation/stack": "^5.10.0",
      "babel-preset-expo": "~12.0.7",
      "date-fns": "^2.28.0",
      "expo-dev-client-components": "2.0.3",
      "graphql": "^16.0.0",
      "graphql-request": "^3.6.1",
      "react-query": "^3.34.16",
      "url": "^0.11.0",
      "@ajv-validator/config": "^0.5.0",
      "@rollup/plugin-commonjs": "^25.0.7",
      "@rollup/plugin-json": "^6.1.0",
      "@types/chai": "^4.3.11",
      "ajv-formats": "^3.0.1",
      "dayjs": "^1.11.10",
      "dayjs-plugin-utc": "^0.1.2",
      "fast-uri": "^1.0.0",
      "jimp": "^0.22.10",
      "module-from-string": "^3.3.0",
      "node-fetch": "^3.1.0",
      "re2": "^1.20.9",
      "tsify": "^5.0.4",
      "@types/function-bind": "^1.1.10",
      "airtap": "^3.0.0",
      "is-async-supported": "~1.2.0",
      "object.assign": "^4.1.7",
      "object.entries": "^1.1.8",
      "run-series": "~1.1.4",
      "json-to-ast": "^2.1.0",
      "@domenic/eslint-config": "^3.0.0",
      "prettier-plugin-jsdoc": "^1.3.0",
      "babel-minify": "^0.5.1",
      "@types/core-js": "^2.5.8",
      "indexof": "^0.0.1",
      "is": "^3.3.0",
      "@actions/core": "^1.10.0",
      "@actions/github": "^5.1.1",
      "@babel/plugin-transform-block-scoping": "^7.21.0",
      "@babel/plugin-transform-typescript": "^7.12.17",
      "@changesets/cli": "^2.26.1",
      "@changesets/get-github-info": "0.5.2",
      "dotenv": "^16.0.3",
      "husky-v4": "^4.3.8",
      "jsr": "^0.12.1",
      "rollup-plugin-cjs-check": "^1.0.1",
      "rollup-plugin-dts": "^5.1.1",
      "graphql15": "npm:graphql@^15.8.0",
      "graphql16": "npm:graphql@^16.8.1",
      "graphql17": "npm:graphql@^17.0.0-alpha.3",
      "kleur": "^2.0.2",
      "bytes": "^3.1.0",
      "@babel/parser": "^7.21.4",
      "@types/esprima": "4.0.3",
      "esprima": "~4.0.1",
      "esprima-fb": "15001.1001.0-dev-harmony-fb",
      "flow-parser": "0.156.0",
      "reify": "0.20.12",
      "ts-add-module-exports": "1.0.0",
      "ts-emit-clean": "1.0.0",
      "changelogx": "^5.0.6",
      "glob-expand": "^0.2.1",
      "precommit": "^1.2.2",
      "prepush": "^3.1.11",
      "watch-run": "^1.2.5",
      "write": "^1.0.3",
      "fbjs-scripts": "file:../fbjs-scripts",
      "gulp-babel": "^8.0.0",
      "gulp-flatten": "^0.4.0",
      "jest-cli": "^23.6.0",
      "object-assign": "^4.0.1",
      "@types/getenv": "^1.0.0",
      "@types/benchmark": "^2.1.1",
      "protobufjs": "^6.8.3",
      "@nodelib/fs.macchiato": "^1.0.1",
      "@types/run-parallel": "^1.1.0",
      "@types/mkdirp": "^0.5.2",
      "@types/rimraf": "^3.0.0",
      "require-inject": "^1.4.4",
      "@babel/generator": "^7.25.9",
      "bplist-parser": "0.3.0",
      "has-ansi": "^3.0.0",
      "fast-check": "^1.24.2",
      "@types/isarray": "^2.0.2",
      "@types/object-keys": "^1.0.3",
      "has-property-descriptors": "^1.0.2",
      "has-symbols": "^1.1.0",
      "@wessberg/rollup-plugin-ts": "^1.3.1",
      "gts": "^3.0.0",
      "standardx": "^7.0.0",
      "ts-transform-default-export": "^1.0.2",
      "@tsconfig/node20": "^20.1.4",
      "@types/bun": "^1.1.14",
      "@types/js-yaml": "^4.0.5",
      "@vercel/ncc": "^0.38.3",
      "eslint-config-universe": "^10.0.0",
      "pmock": "^0.2.3",
      "jsesc": "^3.0.2",
      "@unicode/unicode-16.0.0": "^1.6.0",
      "@types/co": "^4.6.2",
      "@types/stack-utils": "^2.0.0",
      "@1stg/remark-preset": "^2.0.0",
      "@changesets/changelog-github": "^0.5.0",
      "@graphql-eslint/eslint-plugin": "^3.20.1",
      "@html-eslint/parser": "^0.24.1",
      "@prettier/plugin-pug": "^3.0.0",
      "@types/prettier-linter-helpers": "^1.0.4",
      "commitlint": "^12.1.4",
      "eslint-formatter-friendly": "^7.0.0",
      "eslint-mdx": "^2.3.0",
      "eslint-plugin-mdx": "^2.3.0",
      "eslint-plugin-pug": "^1.2.5",
      "eslint-plugin-svelte": "^2.35.1",
      "eslint-plugin-svelte3": "^4.0.0",
      "prettier-plugin-pkg": "^0.18.0",
      "prettier-plugin-svelte": "^3.1.2",
      "simple-git-hooks": "^2.11.1",
      "svelte": "^4.2.8",
      "vue-eslint-parser": "^9.3.2",
      "get-proto": "^1.0.1",
      "eslint-config-ostai": "^3.0.0",
      "pre-suf": "^1.1.1",
      "spawn-sync": "^2.0.0",
      "tap-spec": "^5.0.0",
      "@urql/core": "5.0.3",
      "source-map": "0.6.1",
      "babel-preset-es2015": "^6.6.0",
      "gulp-bump": "^2.8.0",
      "gulp-eslint": "^6.0.0",
      "gulp-filter": "^2.0.0",
      "gulp-git": "^2.4.2",
      "gulp-mocha": "^7.0.2",
      "gulp-tag-version": "^1.3.0",
      "jsdoc": "^3.5.5",
      "@babel/runtime": "^7.12.5",
      "@quilted/react-testing": "0.5.27",
      "@react-native-community/eslint-config": "3.2.0",
      "@shopify/eslint-plugin": "^41.3.1",
      "enhanced-resolve": "^5.9.3",
      "gh-pages": "^1.2.0",
      "metro-react-native-babel-preset": "0.76.7",
      "core-util-is": "^1.0.2",
      "inherits": "^2.0.3",
      "p-event": "^4.2.0",
      "ajv": "^6.12.0",
      "@babel/plugin-syntax-class-properties": "^7.10.4",
      "@types/babel__template": "^7.0.2",
      "@svgr/core": "8.1.0",
      "@types/svg-parser": "^2.0.3",
      "svgo": "^3.0.2",
      "@typescript-eslint/parser-v2": "npm:@typescript-eslint/parser@^2.26.0",
      "@typescript-eslint/parser-v3": "npm:@typescript-eslint/parser@^3.10.0",
      "@typescript-eslint/parser-v4": "npm:@typescript-eslint/parser@^4.1.0",
      "@typescript-eslint/parser-v5": "npm:@typescript-eslint/parser@^5.0.0-0",
      "fill-range": "^7.0.1",
      "time-require": "github:jonschlinkert/time-require",
      "babel-plugin-transform-object-rest-spread": "^6.26.0",
      "babel-plugin-transform-replace-object-assign": "^1.0.0",
      "object.fromentries": "^2.0.8",
      "he": "^1.2.0",
      "publish-please": "^5.5.2",
      "replace-in-file": "^7.1.0",
      "tinybench": "^2.9.0",
      "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
      "@types/make-async-function": "^1.0.2",
      "fast-levenshtein": "^2.0.6",
      "ld": "^0.1.0",
      "levdist": "^2.2.9",
      "levenshtein": "^1.0.5",
      "levenshtein-component": "^0.0.1",
      "levenshtein-edit-distance": "^2.0.3",
      "natural": "^0.6.3",
      "talisman": "^0.21.0",
      "http-server": "^0.12.3",
      "testit": "^3.1.0",
      "jest-config": "27.5.1",
      "resolve-from": "^5.0.0",
      "svg-term-cli": "^2.1.1",
      "istanbul-harmony": "0",
      "mz": "^1.0.2",
      "assume": "^2.2.0",
      "rollup-plugin-cleanup": "^3.1.1",
      "rollup-plugin-ts": "^2.0.4",
      "start-server-and-test": "^1.11.2",
      "@playwright/test": "^1.40.1",
      "@types/eslint__js": "8.42.3",
      "browserstack-node-sdk": "^1.34.27",
      "make-dir": "^1.2.0",
      "async": "^2.6.2",
      "errto": "^0.2.1",
      "iconv": "^2.3.5",
      "unorm": "^1.6.0",
      "iconv-lite": "0.4.13",
      "uuid": "^8.3.2",
      "jest-junit": "^16.0.0",
      "htmlparser2": "^8.0.0",
      "@fastify/busboy": "2.1.1",
      "@matteo.collina/tspl": "^0.1.1",
      "@sinonjs/fake-timers": "11.2.2",
      "borp": "^0.15.0",
      "dns-packet": "^5.4.0",
      "formdata-node": "^4.2.4",
      "https-pem": "^3.0.0",
      "node-forge": "^1.3.1",
      "proxy": "1",
      "snazzy": "^9.0.0",
      "call-bound": "^1.0.3",
      "es-abstract": "^1.23.8",
      "make-async-generator-function": "^1.0.0",
      "mock-property": "^1.1.0",
      "grunt-shell": "^1.1.1",
      "qunit-extras": "^1.1.0",
      "@keyv/test-suite": "*",
      "timekeeper": "^2.3.1",
      "@jest/types": "^29.0.0",
      "@c4312/matcha": "^1.3.1",
      "@types/brace-expansion": "^1.1.0",
      "@typescript-eslint/typescript-estree": "8.23.0",
      "jest-specific-snapshot": "^8.0.0",
      "pretty-format": "^29.7.0",
      "@types/marked": "^5.0.2",
      "@types/mdast": "^4.0.3",
      "@types/natural-compare": "^1.4.0",
      "@typescript-eslint/rule-schema-to-typescript-types": "8.23.0",
      "cross-fetch": "*",
      "json-schema": "*",
      "markdown-table": "^3.0.1",
      "mdast-util-from-markdown": "^2.0.0",
      "mdast-util-mdx": "^3.0.0",
      "micromark-extension-mdxjs": "^3.0.0",
      "title-case": "^3.0.3",
      "unist-util-visit": "^5.0.0",
      "@types/eslint-visitor-keys": "*",
      "@types/estree": "0.0.52",
      "@types/estree-jsx": "^0.0.1",
      "esquery": "^1.4.0",
      "json-diff": "~0.3.1",
      "@types/function.prototype.name": "^1.1.4",
      "@types/is-date-object": "^1.0.4",
      "@types/is-symbol": "^1.0.2",
      "@types/object-is": "^1.1.0",
      "function.prototype.name": "^1.1.6",
      "object-is": "^1.1.6",
      "karma-cli": "^2.0.0",
      "@unicode/unicode-15.0.0": "^1.6.5",
      "array.from": "^1.1.6",
      "array.prototype.filter": "^1.0.4",
      "array.prototype.flatmap": "^1.3.3",
      "array.prototype.indexof": "^1.0.8",
      "available-regexp-flags": "^1.0.4",
      "define-accessor-property": "^1.0.0",
      "define-data-property": "^1.1.4",
      "has-bigints": "^1.0.2",
      "has-named-captures": "^1.0.0",
      "is-core-module": "^2.16.1",
      "is-registered-symbol": "^1.1.1",
      "safe-bigint": "^1.1.1",
      "ses": "^1.10.0",
      "@jest/globals": "^29.0.0",
      "@types/color": "^3.0.6",
      "react-native-safe-area-context": "^4.8.1",
      "react-native-screens": "^4.3.0",
      "@types/react-is": "^18.0.0",
      "@types/use-sync-external-store": "^0.0.6",
      "immer": "^10.1.1",
      "@types/react-dom": "^16.9.8",
      "@react-native-masked-view/masked-view": "0.3.2",
      "ansi": "^0.3.1",
      "codemirror": "^6.0.1",
      "rollup-plugin-node-polyfills": "^0.2.1",
      "domexception": "^2.0.1",
      "got": "11.8.6",
      "minipass-fetch": "^1.4.1",
      "@types/pkgjs__parseargs": "^0.10.1",
      "source-map-js": "1.0.2",
      "clap": "^2.0.1",
      "better-ajv-errors": "^0.5.1",
      "regjsparser": "^0.11.2",
      "eslint-v7": "npm:eslint@^7.7.0",
      "eslint-v9": "npm:eslint@^9.0.0",
      "pinkie-promise": "^2.0.0",
      "v8-natives": "^1.1.0",
      "@types/functions-have-names": "^1.2.2",
      "@types/make-async-generator-function": "^1.0.3",
      "@types/boolbase": "^1.0.1",
      "cheerio-soupselect": "^0.1.1",
      "@nitpik/javascript": "0.4.0",
      "@nitpik/node": "0.0.5",
      "yorkie": "^2.0.0",
      "@react-native/eslint-plugin-specs": "^0.74.84",
      "far": "0.0.1",
      "github-changes": "^2.0.3",
      "@apollo/client": "^3.4.10",
      "@babel/preset-typescript": "^7.10.4",
      "fuse.js": "^6.4.6",
      "use-subscription": "^1.8.0",
      "aok": "^1.9.0",
      "jsdoc-to-markdown": "^5.0.0",
      "@types/mock-property": "^1.0.2",
      "is-mergeable-object": "1.1.0",
      "is-plain-object": "^5.0.0",
      "jsmd": "^1.0.2",
      "metro-resolver": "^0.81.0",
      "data-uri-to-buffer": "^6.0.1",
      "undici": "^5.27.2",
      "wait-for-expect": "^3.0.2",
      "karma-sinon": "^1.0.5",
      "sinon-chai": "^2.8.0",
      "@babel/plugin-transform-class-properties": "^7.22.5",
      "@babel/plugin-transform-nullish-coalescing-operator": "^7.25.9",
      "@babel/plugin-transform-object-rest-spread": "^7.24.7",
      "@babel/plugin-transform-optional-chaining": "^7.24.8",
      "@babel/plugin-syntax-dynamic-import": "^7.8.3",
      "@babel/plugin-transform-async-to-generator": "^7.24.7",
      "@babel/plugin-transform-destructuring": "^7.24.8",
      "hermes-estree": "0.23.1",
      "@remix-run/web-fetch": "^4.4.0",
      "git-validate": "2.2.4",
      "rollup-plugin-multi-input": "1.2.0",
      "@types/chai-as-promised": "^7.1.5",
      "@types/chai-string": "^1.4.2",
      "busboy": "^1.4.0",
      "p-timeout": "^5.0.0",
      "@types/es6-promisify": "^5.0.0",
      "@types/set-cookie-parser": "^2.4.1",
      "live-server": "^1.2.0",
      "@types/cookie-signature": "^1.0.3",
      "@types/source-map-support": "^0.5.0",
      "@remix-run/web-blob": "^3.1.0",
      "@remix-run/web-file": "^3.1.0",
      "@callstack/eslint-config": "^13.0.1",
      "@types/decamelize": "^1.2.0",
      "cpr": "^3.0.1",
      "cross-spawn": "^7.0.0",
      "hashish": "0.0.4",
      "which": "^2.0.0",
      "yargs-test-extends": "^1.0.1",
      "@types/pnpapi": "^0.0.2",
      "@types/resolve": "^1.20.2",
      "@types/lodash": "^4.14.184",
      "lodash": "^4.17.10",
      "mutate-fs": "^2.1.1",
      "ansi-escapes": "^5.0.0",
      "@unicode/unicode-13.0.0": "^1.0.3",
      "regexgen": "^1.3.0",
      "clock-mock": "^1.0.6",
      "buildman": "*",
      "testman": "*",
      "seedrandom": "2.4.3",
      "sauce-test": "^1.3.3",
      "test-result": "^2.0.0",
      "react-16-8": "npm:react@16.8.0",
      "react-dom-16-8": "npm:react-dom@16.8.0",
      "scheduler-0-13": "npm:scheduler@0.13.0",
      "colortape": "^0.1.2",
      "@react-native-community/cli-types": "15.1.3",
      "@types/prompts": "^2.0.1",
      "hasbin": "^1.2.3",
      "@types/hapi__joi": "^17.1.6",
      "slash": "^3.0.0",
      "snapshot-diff": "^0.7.0",
      "eslint-config-standard-with-typescript": "^22.0.0",
      "klaw": "^2.1.1",
      "klaw-sync": "^3.0.2",
      "read-dir-files": "^0.1.1",
      "@types/mime": "^2.0.1",
      "@types/shell-quote": "^1.7.1",
      "mime-db": "1.31.0",
      "mime-score": "1.1.0",
      "mime-types": "2.1.33",
      "@types/command-exists": "^1.2.0",
      "@types/envinfo": "^7.8.4",
      "@types/ip": "^1.1.0",
      "@types/wcwidth": "^1.0.0",
      "@types/compression": "^1.7.2",
      "@types/connect": "^3.4.35",
      "@types/errorhandler": "^1.5.0",
      "parcel": "^2.8.2",
      "@types/cosmiconfig": "^5.0.3",
      "@types/parse-json": "^4.0.0",
      "@vitest/coverage-istanbul": "^0.34.3",
      "eslint-config-davidtheclark-node": "^0.2.2",
      "eslint-plugin-vitest": "^0.2.8",
      "parent-module": "^0.1.0",
      "remark-preset-davidtheclark": "^0.7.0",
      "ora": "^6.0.1",
      "tooling": "webpack/tooling#v1.23.1",
      "from": "~0.1.3",
      "codecov.io": "^0.1.6",
      "escomplex-js": "1.2.0",
      "everything.js": "1.0.3",
      "karma-detect-browsers": "^2.2.5",
      "karma-safaritechpreview-launcher": "0.0.6",
      "node-tick-processor": "~0.0.2",
      "temp": "~0.8.3",
      "typescript-formatter": "~5.1.3",
      "unicode-8.0.0": "~0.7.0",
      "jest-snapshot": "^29.6.3",
      "jest-snapshot-serializer-raw": "^1.2.0",
      "metro-babel-register": "0.81.1",
      "mock-req": "^0.2.0",
      "mock-res": "^0.6.0",
      "stack-trace": "^0.0.10",
      "clear-require": "^2.0.0",
      "bufferutil": "~4.0.0",
      "utf-8-validate": "~5.0.0",
      "canvas": "^2.8.0",
      "canvasutil": "0.0.4",
      "stream-consumers": "^1.0.1",
      "chmodr": "^1.2.0",
      "events-to-array": "^2.0.3",
      "nock": "^13.2.9",
      "@types/es-abstract": "^1.17.9",
      "possible-typed-array-names": "^1.0.0",
      "from2": "^2.0.3",
      "@babel/plugin-transform-new-target": "^7.8.3",
      "weallbehave": "^1.2.0",
      "weallcontribute": "^1.0.8",
      "readable-stream": "2.3.6",
      "base64-url": "^2.3.3",
      "flattie": "^1.1.0",
      "hash-obj": "^4.0.0",
      "json-stringify-deterministic": "^1.0.7",
      "nanobench": "^2.1.1",
      "@types/cross-spawn": "^6.0.2",
      "@types/signal-exit": "^3.0.1",
      "@webpack-contrib/eslint-config-webpack": "^3.0.0",
      "eslint-plugin-html": "^7.1.0",
      "eslint-plugin-jsdom-internal": "link:./scripts/eslint-plugin",
      "karma-mocha-webworker": "^1.3.0",
      "mocha-sugar-free": "^1.4.0",
      "pngjs": "^7.0.0",
      "server-destroy": "^1.0.1",
      "watchify": "^4.0.0",
      "yargs": "16.2.0",
      "browserify-istanbul": "^2.0.0",
      "fake": "0.2.0",
      "formidable": "^1.0.17",
      "is-node-modern": "^1.0.0",
      "obake": "^0.1.2",
      "pkgfiles": "^2.3.0",
      "@types/css-tree": "^1.0.3",
      "@types/csso": "^5.0.4",
      "pixelmatch": "5.3.0",
      "tar-stream": "^3.1.6",
      "cmd-shim": "^7.0.0",
      "@types/ensure-posix-path": "^1.0.0",
      "ensure-posix-path": "^1.0.1",
      "jest-jasmine2": "^29.7.0",
      "@commitlint/config-angular": "^8.1.0",
      "@typescript-eslint/eslint-plugin-tslint": "^5.3.0",
      "@xml-conformance-suite/js": "^3.0.0",
      "@xml-conformance-suite/mocha": "^3.0.0",
      "@xml-conformance-suite/test-data": "^3.0.0",
      "conventional-changelog-cli": "^2.0.23",
      "eslint-config-lddubeau-base": "^6.1.0",
      "eslint-config-lddubeau-ts": "^2.0.2",
      "eslint-plugin-prefer-arrow": "^1.2.3",
      "eslint-plugin-simple-import-sort": "^7.0.0",
      "renovate-config-lddubeau": "^1.0.0",
      "simple-dist-tag": "^1.0.2",
      "tslint-microsoft-contrib": "^6.2.0",
      "@babel/plugin-syntax-jsx": "^7.25.9",
      "@biomejs/biome": "1.9.4",
      "@react-native/normalize-colors": "0.77.0",
      "nitro-codegen": "0.21.0",
      "react-native-nitro-modules": "0.21.0",
      "buffer-alloc-unsafe": "^1.1.0",
      "benchmarked": "^2.0.0",
      "vows": "^0.8.2",
      "after": "0.8.2",
      "babel": "^6.5.2",
      "babel-preset-react": "^6.24.1",
      "babel-preset-stage-0": "^6.5.0",
      "caniuse-api": "^3.0.0",
      "gitbook": "^3.2.2",
      "gitbook-cli": "^2.3.0",
      "gitbook-plugin-anker-enable": "0.0.4",
      "gitbook-plugin-edit-link": "^2.0.2",
      "gitbook-plugin-github": "^2.0.0",
      "gitbook-plugin-prism": "^2.4.0",
      "@types/is-async-function": "^2.0.3",
      "@types/is-generator-function": "^1.0.3",
      "@types/is-weakref": "^1.0.0",
      "@types/object.assign": "^4.1.0",
      "@types/which-boxed-primitive": "^1.0.3",
      "set-function-length": "^1.2.2",
      "dateformat": "^1.0.11",
      "linefix": "^0.1.1",
      "shelljs-nodecli": "^0.1.1",
      "esbuild-runner": "^2.2.1",
      "is-ci-cli": "^2.2.0",
      "ljharb-is-core-module": "npm:is-core-module@^2.15.0",
      "resolve-pkg": "^2.0.0",
      "es5-shim": "^4.6.7",
      "es6-shim": "^0.35.8",
      "process": "^0.11.10",
      "workerize-loader": "^2.0.2",
      "@types/fb-watchman": "^2.0.0",
      "@babel/plugin-proposal-optional-chaining": "^7.2.0",
      "@babel/polyfill": "^7.0.0",
      "all-contributors-cli": "^4.11.1",
      "github-release-cli": "^0.4.1",
      "os-name": "^3.1.0",
      "pkg": "^4.5.1",
      "prettier-eslint-cli": "^4.1.1",
      "yamlify-object": "^0.5.1",
      "unicode-property-value-aliases-ecmascript": "^2.2.0",
      "@types/uuid": "^8.3.4",
      "@types/color-convert": "^1.9.0",
      "flow-remove-types": "^1.2.3",
      "@fastify/pre-commit": "^2.1.0",
      "neostandard": "^0.12.0",
      "uri-js": "^4.4.1",
      "tslint-config-lddubeau": "^4.1.0",
      "@sinclair/hammer": "^0.17.1",
      "acorn": "^1.0.1",
      "@rollup/plugin-buble": "^0.21.0",
      "@rollup/plugin-sucrase": "^5.0.1",
      "@rollup/pluginutils": "^5.0.2",
      "@types/zen-observable": "^0.8.3",
      "callbag-from-iter": "^1.3.0",
      "callbag-iterate": "^1.0.0",
      "callbag-take": "^1.5.0",
      "flowgen": "^1.21.0",
      "zen-observable": "^0.10.0",
      "tsm": "^2.3.0",
      "@unicode/unicode-14.0.0": "^1.2.1",
      "@babel/traverse": "^7.21.4",
      "charcodes": "^0.2.0",
      "@babel/helper-transform-fixture-test-runner": "^7.26.5",
      "array.prototype.concat": "^1.0.2",
      "babel-plugin-polyfill-es-shims": "^0.10.4",
      "@babel/helpers": "^7.26.7",
      "@babel/runtime-corejs3": "^7.26.7",
      "babel-plugin-polyfill-corejs3": "^0.11.0",
      "core-js-pure": "^3.38.0",
      "@babel/helper-check-duplicate-nodes": "^7.25.9",
      "@babel/helper-fixtures": "^7.26.0",
      "@babel/helper-string-parser": "^7.25.9",
      "@babel/helper-validator-identifier": "^7.25.9",
      "@jridgewell/sourcemap-codec": "^1.4.15",
      "@types/jsesc": "^2.5.0",
      "@babel/plugin-transform-arrow-functions": "^7.25.9",
      "@types/lru-cache": "^5.1.1",
      "import-meta-resolve": "^4.1.0",
      "babel-plugin-syntax-hermes-parser": "^0.19.1",
      "@mdn/browser-compat-data": "~5.5.51",
      "core-js-compat": "^3.40.0",
      "electron-to-chromium": "^1.4.816",
      "regenerator-runtime": "^0.14.0",
      "@types/charcodes": "^0.2.0",
      "@babel/plugin-external-helpers": "^7.25.9",
      "lodash.countby": "^4.6.0",
      "puppeteer-core": "^8.0.0",
      "@types/picomatch": "^2.3.0",
      "sauce-browsers": "^2.0.0",
      "@babel/plugin-proposal-decorators": "^7.22.15",
      "@babel/plugin-transform-classes": "^7.8.6",
      "@babel/plugin-transform-for-of": "^7.22.5",
      "@babel/plugin-transform-spread": "^7.22.5",
      "make-node": "0.3.x",
      "@types/lodash.isequal": "^4.5.5",
      "@types/lodash.memoize": "^4.1.6",
      "fast-memoize": "^2.5.2",
      "lodash.isequal": "^4.5.0",
      "lodash.memoize": "^4.1.2",
      "mem": "^9.0.1",
      "memoizee": "^0.4.15",
      "moize": "^6.1.0",
      "nanocolors": "^0.2.9",
      "size-limit": "^11.0.0",
      "@cfware/lint": "^1.4.3",
      "@cfware/nyc": "^0.7.0",
      "if-ver": "^1.1.0",
      "libtap": "^0.3.0",
      "base32-decode": "^1.0.0",
      "base32-encode": "^1.1.1",
      "rollup-plugin-buble": "^0.16.0",
      "unicode-10.0.0": "^0.7.5",
      "@sebbo2002/semantic-release-jsr": "^1.0.0",
      "@types/jsonwebtoken": "^8.5.6",
      "genversion": "^2.1.0",
      "jsonwebtoken": "^9.0.2",
      "nanoid": "3.3.6",
      "openai": "^4.52.5",
      "semantic-release-plugin-update-version-in-files": "^1.1.0",
      "testcontainers": "^8.5.1",
      "ts-test-decorators": "^0.0.6",
      "@types/faker": "^5.1.6",
      "@types/node-fetch": "^2.5.12",
      "faker": "^5.3.1",
      "jest-mock-server": "^0.1.0",
      "pretty-quick": "^4.0.0",
      "ts-loader": "^9.4.2",
      "jsdom-global": "^3.0.2",
      "mock-socket": "^9.3.1",
      "web-worker": "1.2.0",
      "jest-environment-jsdom": "^29.5.0",
      "node-abort-controller": "^3.1.1",
      "ts-expect": "^1.3.0",
      "wait-for-localhost-cli": "^3.0.0",
      "@types/base64-js": "^1.2.5",
      "@tsconfig/node12": "^1.0.9",
      "@types/md5": "^2.3.1",
      "basic-auth": "^2.0.1",
      "body-parser": "^1.19.0",
      "fetch-mock": "^9.11.0",
      "json-schema-to-typescript": "^11.0.2",
      "@types/find-up": "^4.0.0",
      "require-from-string": "^2.0.2",
      "@types/npm-package-arg": "^6.1.0",
      "@types/split": "^1.0.0",
      "ndoc": "^5.0.1",
      "@types/xml2js": "~0.4.11",
      "ben": "0.0.0",
      "markdown-toc": "0.12.x",
      "vasync": "1.4.3",
      "verror": "1.3.3",
      "@netlify/functions": "^1.4.0",
      "@types/express": "^4.17.17",
      "@expo/multipart-body-parser": "^1.0.0",
      "@expo/ngrok": "4.1.3",
      "@expo/server": "^0.5.1",
      "@graphql-codegen/cli": "^2.16.3",
      "@graphql-codegen/typescript": "^2.8.7",
      "@graphql-codegen/typescript-operations": "^2.5.12",
      "@swc/core": "~1.2.249",
      "@taskr/clear": "^1.1.0",
      "@taskr/esnext": "^1.1.0",
      "@taskr/watch": "^1.1.0",
      "@types/accepts": "^1.3.5",
      "@types/cacache": "^17.0.2",
      "@types/execa": "^0.9.0",
      "@types/form-data": "^2.2.0",
      "@types/klaw-sync": "^6.0.0",
      "@types/minimatch": "^3.0.5",
      "@types/progress": "^2.0.5",
      "@types/send": "^0.17.1",
      "@types/tar": "^6.1.1",
      "@types/webpack": "~4.41.32",
      "@types/webpack-dev-server": "^3.11.0",
      "@types/wrap-ansi": "^8.0.1",
      "devtools-protocol": "^0.0.1113120",
      "expo-atlas": "^0.4.0",
      "find-process": "^1.4.7",
      "jest-runner-tsd": "^6.0.0",
      "node-html-parser": "^6.1.5",
      "nullthrows": "^1.1.1",
      "taskr": "^1.1.0",
      "tree-kill": "^1.2.2",
      "expo-font": "^11.10.0",
      "@types/get-port": "^3.2.0",
      "@types/tmp": "^0.0.33",
      "sass": "^1.60.0",
      "@tsconfig/node22": "^22.0.0",
      "fetch-nodeshim": "^0.2.1",
      "@tsconfig/node14": "^1.0.1",
      "@types/jsbn": "^1.2.30",
      "@types/node-forge": "^1.0.0",
      "ts-node-dev": "^1.1.8",
      "into-stream": "^3.0.0",
      "eslint-config-silverwind": "^2.1.0",
      "updates": "^7.2.0",
      "ver": "4.0.1",
      "tempfile": "^3.0.0",
      "babel-preset-moxy": "^3.1.0",
      "eslint-config-moxy": "^7.1.0",
      "cat-names": "^1.0.2",
      "is-running": "^2.1.0",
      "grunt-contrib-watch": "~0.5.3",
      "grunt-contrib-uglify": "~0.2.0",
      "call-bind": "^1.0.7",
      "inline-source-map": "~0.6.2",
      "babel-preset-latest": "^6.24.1",
      "mocha-qunit-ui": "^0.1.3",
      "sorcery": "^0.10.0",
      "@babel/plugin-proposal-object-rest-spread": "^7.8.3",
      "is-promise": "^2.0.0",
      "lie": "^3.0.0",
      "native-promise-only": "^0.8.0",
      "pinkie": "^2.0.0",
      "rsvp": "^3.0.0",
      "vow": "^0.4.0",
      "when": "^3.0.0",
      "@evilmartians/lefthook": "^1.5.0",
      "@types/qrcode": "^1.5.5",
      "react-native-svg": "15.9.0",
      "closure-dom": "=0.2.6",
      "grunt-contrib-clean": "^2.0.1",
      "grunt-contrib-concat": "^1.0.1",
      "grunt-contrib-jshint": "~0.4.3",
      "grunt-exec": "~1.0.0",
      "mocha-headless-chrome": "4.0.0",
      "promis": "=1.1.4",
      "unexpected": "^13.0.0",
      "promise-polyfill": "6.0.2",
      "url-search-params": "0.6.1",
      "printable-string": "^0.3.0",
      "whatwg-encoding": "^2.0.0",
      "unicode-canonical-property-names-ecmascript": "^2.0.1",
      "expect": "^26.0.1",
      "random-item": "^1.0.0",
      "jest-ts-webcompat-resolver": "^1.0.0",
      "@types/prettier": "^2.1.5",
      "ansi-regex": "^5.0.1",
      "ansi-styles": "^5.0.0",
      "grunt-contrib-nodeunit": "~0.2.0",
      "safe-regex": "^2.1.1",
      "verup": "^1.3.x",
      "bundle-collapser": "^1.4.0",
      "uglifyify": "^5.0.2",
      "uglifyjs": "^2.4.11",
      "github-release-notes": "0.13.1",
      "better-assert": "*",
      "promises-aplus-tests": "*",
      "reamde": "^1.1.0",
      "size-table": "^0.2.0",
      "rollup-plugin-json": "^3.1.0",
      "@wdio/browser-runner": "^8.14.6",
      "@wdio/concise-reporter": "^8.14.0",
      "@wdio/globals": "^8.14.6",
      "@wdio/mocha-framework": "^8.11.0",
      "common-tags": "^1.8.0",
      "ejs": "^3.0.2",
      "eslint-plugin-eslint-comments": "^3.2.0",
      "eslint-plugin-internal-rules": "file:tools/internal-rules",
      "eslint-plugin-unicorn": "^49.0.0",
      "eslump": "^3.0.0",
      "fast-glob": "^3.0.4",
      "gray-matter": "^4.0.3",
      "load-perf": "^0.2.0",
      "markdown-it": "^12.2.0",
      "markdown-it-container": "^3.0.0",
      "metascraper": "^5.25.7",
      "metascraper-description": "^5.25.7",
      "metascraper-image": "^5.29.3",
      "metascraper-logo": "^5.25.7",
      "metascraper-logo-favicon": "^5.25.7",
      "metascraper-title": "^5.25.7",
      "mocha-junit-reporter": "^2.0.0",
      "node-polyfill-webpack-plugin": "^1.0.3",
      "pirates": "^4.0.5",
      "progress": "^2.0.3",
      "vite-plugin-commonjs": "0.10.1",
      "webdriverio": "^8.24.0",
      "sync-content": "^1.0.2",
      "babel-plugin-transform-es2017-object-entries": "0.0.5",
      "heapdump": "^0.3.12",
      "top-sites": "1.1.194",
      "grunt-benchmark": "~0.2.0",
      "grunt-mocha-test": "~0.2.2",
      "grunt-npm-install": "~0.1.0",
      "load-grunt-tasks": "~0.6.0",
      "aigle": "^1.14.0",
      "fs-extra": "^11.2.0",
      "func-comparator": "^0.7.2",
      "gulp-exit": "0.0.2",
      "gulp-jscs": "^4.0.0",
      "gulp-util": "^3.0.7",
      "mocha-parallel-executor": "^0.3.0",
      "mocha.parallel": "^0.15.3",
      "require-dir": "^0.3.0",
      "text-table": "^0.2.0",
      "time-diff": "^0.3.1",
      "@sinonjs/eslint-config": "^4.0.6",
      "@sinonjs/referee-sinon": "^10.1.0",
      "mochify": "9.2.0",
      "@sinonjs/eslint-plugin-no-prototype-methods": "^0.1.0",
      "@studio/changes": "^2.2.0",
      "jsverify": "0.8.4",
      "knuth-shuffle": "^1.0.8",
      "@babel/node": "^7.0.0-beta.44",
      "gzip-size-cli": "^2.1.0",
      "mockdate": "^2.0.2",
      "moment": "2.29.2",
      "moment-timezone": "0.5.31",
      "ncp": "^2.0.0",
      "@callstack/tslint-config": "^0.1.0",
      "@types/slice-ansi": "^2.0.0",
      "@types/strip-ansi": "^3.0.0",
      "foreach": "^2.0.5",
      "bower-registry-client": "^1.0.0",
      "chai-exclude": "^2.0.2",
      "commonjs-everywhere": "^0.9.7",
      "optionator": "^0.9.1",
      "create-react-class": "^15.5.3",
      "prop-types": "^15.6.2",
      "optional-dev-dependency": "2.0.1",
      "babel-plugin-transform-flow-strip-types": "^6.22.0",
      "remark-cli": "^5.0.0",
      "eslint-config-satya164": "^3.1.8",
      "csv-parse": "4.16.3",
      "raw-body": "2.5.0",
      "stream-to-array": "2.3.0",
      "@types/async-retry": "^1.4.5",
      "async-retry": "^1.3.3",
      "tsconfig": "0.0.0",
      "locate-character": "^2.0.5",
      "globalthis": "^1.0.4",
      "@types/end-of-stream": "^1.4.2",
      "buble": "^0.16.0",
      "commitlint-config-angular": "^4.2.1",
      "eslint-config-strict": "^14.0.0",
      "eslint-plugin-filenames": "^1.2.0",
      "rollup-plugin-istanbul": "^1.1.0",
      "simple-assert": "^1.0.0",
      "@relmify/jest-serializer-strip-ansi": "^1.0.2",
      "commitizen": "4.2.4",
      "cz-conventional-changelog": "3.3.0",
      "get-node": "^11.0.1",
      "@babel/eslint-plugin": "7.17.7",
      "babel-preset-kyt-react": "1.3.18",
      "enzyme": "3.11.0",
      "enzyme-adapter-react-16": "1.15.6",
      "enzyme-to-json": "3.6.2",
      "eslint-config-kyt": "1.6.2",
      "eslint-plugin-jest-formatting": "3.0.0",
      "microbundle": "0.14.2",
      "fast-url-parser": "1.1.3",
      "@ls-lint/ls-lint": "^1.11.2",
      "astring": "^1.8.5",
      "sourcemap-codec": "1.4.8",
      "eslint-plugin-no-only-tests": "^3.1.0",
      "@jridgewell/resolve-uri-latest": "npm:@jridgewell/resolve-uri@*",
      "ts-mocha": "10.0.0",
      "open-cli": "6.0.1",
      "rollup-plugin-copy": "3.4.0",
      "serve-index": "1.9.1",
      "whatwg-fetch": "3.6.20",
      "@1stg/eslint-config": "7",
      "@1stg/lib-config": "^12.0.1",
      "@mozilla/glean": "^3.0.0",
      "@pkgr/rollup": "^4.1.3",
      "@types/is-glob": "^4.0.4",
      "@types/unist": "^2.0.11",
      "dummy.js": "link:dummy.js",
      "eslint-plugin-import-x": "^4.5.0",
      "size-limit-preset-node-lib": "^0.3.0",
      "type-coverage": "^2.27.0",
      "@babel/plugin-syntax-decorators": "^7.25.9",
      "@babel/plugin-syntax-do-expressions": "^7.25.9",
      "@babel/plugin-syntax-function-bind": "^7.25.9",
      "eslint-remote-tester": "^3.0.1",
      "eslint-remote-tester-repositories": "^1.0.1",
      "eslint-scope": "^3.7.3",
      "gfm-footnotes": "^1.0.1",
      "ls-engines": "^0.8.1",
      "@babel/plugin-transform-react-jsx-source": "^7.8.3",
      "@babel/plugin-transform-template-literals": "^7.8.3",
      "confusing-browser-globals": "^1.0.9",
      "jest-diff": "^27.4.2",
      "rollup-plugin-strip-banner": "^1.0.0",
      "@types/glob-parent": "^5.1.0",
      "@types/merge2": "^1.1.4",
      "bencho": "^0.1.1",
      "eslint-config-mrmlnc": "^1.1.0",
      "fdir": "6.0.1",
      "hereby": "^1.8.1",
      "snap-shot-it": "^7.9.10",
      "eslint-config-gulp": "^5.0.0",
      "mocha-phantomjs": "^4.1.0",
      "phantomjs": "^2.1.7",
      "@react-navigation/drawer": "^7.1.1",
      "react-server-dom-webpack": "19.0.0-rc-6230622a1a-20240610",
      "@babel/runtime-corejs2": "^7.0.0",
      "random-seed": "0.3.0",
      "@types/plist": "^3.0.2",
      "is-buffer": "^2.0.4",
      "neo-async": "^2.6.1",
      "@react-native-community/cli-platform-android": "15.0.1",
      "@react-native-community/cli-platform-ios": "15.0.1",
      "react-native-reanimated": "^3.12.0",
      "react-native-windows": "^0.71.0",
      "@react-native-community/eslint-plugin": "^1.2.0",
      "@react-native/babel-plugin-codegen": "^0.75.4",
      "@types/pixelmatch": "^5.2.0",
      "jest-html-reporters": "^3.1.7",
      "peggy": "4.0.3",
      "@types/array.prototype.every": "^1.1.1",
      "array.prototype.every": "^1.1.5",
      "isarray": "^2.0.5",
      "iterate-iterator": "^1.0.2",
      "@types/gulp": "^4.0.5",
      "gulp-cli": "^2.0.1",
      "turbo-gulp": "^0.20.1",
      "log-update": "^3.2.0",
      "string-length": "^4.0.1",
      "thunks": "^4.9.6",
      "tman": "^1.10.0",
      "to-through": "^2.0.0",
      "@hapi/eslint-plugin": "*",
      "@zeit/ncc": "^0.22.3",
      "twist": "*",
      "babel-preset-fbjs": "file:../babel-preset-fbjs",
      "merge-stream": "^1.0.0",
      "detox": "20.9.1",
      "react-native-bundle-scale": "1.1.0",
      "@types/hammerjs": "^2.0.38",
      "@types/hoist-non-react-statics": "^3.3.1",
      "expo": "^48.0.0",
      "ansi-colors": "^3.2.4",
      "bash-path": "^2.0.1",
      "media-typer": "1.1.0",
      "unicode-12.0.0": "^0.7.9",
      "@pkgjs/support": "^0.0.6",
      "error-cause": "^1.0.8",
      "safer-buffer": "^2.1.2",
      "string.prototype.repeat": "^1.0.0",
      "ast-types": "^0.15.2",
      "@eslint-community/eslint-plugin-mysticatea": "^15.5.1",
      "dot-prop": "^7.2.0",
      "installed-check": "^8.0.1",
      "vitepress": "^1.4.1",
      "warun": "^1.0.0",
      "dts-bundle": "^0.7.3",
      "js-tokens": "^8.0.2",
      "bl": "^2.0.0",
      "deep-strict-equal": "^0.2.0",
      "events.once": "^2.0.2",
      "gunzip-maybe": "^1.4.1",
      "hyperquest": "^2.1.3",
      "lolex": "^2.6.0",
      "pump": "^3.0.0",
      "tar-fs": "^1.16.2",
      "util-promisify": "^2.1.0",
      "@types/babel-plugin-macros": "^3.1.0",
      "eslint-plugin-deprecation": "^2.0.0",
      "npm-package-json-lint": "^7.1.0",
      "npm-package-json-lint-config-default": "^6.0.0",
      "yaml-eslint-parser": "^1.2.2",
      "@wdio/appium-service": "^8.24.0",
      "appium": "2.2.2",
      "appium-uiautomator2-driver": "^2.34.1",
      "appium-xcuitest-driver": "^5.9.1",
      "react-native-codegen": "^0.71.5",
      "react-native-macos": "^0.71.0",
      "react-native-test-app": "^2.5.33",
      "babel-plugin-react-compiler": "^19.0.0-beta-9ee70a1-20241017",
      "react-compiler-runtime": "^19.0.0-beta-8a03594-20241020",
      "expectations": "^0.7.1",
      "isomorphic-fetch": "^3.0.0",
      "jest-runtime": "^29.7.0",
      "@ehmicky/dev-tasks": "^0.31.9",
      "test-each": "^2.0.0",
      "glob-stream": "^6.1.0",
      "globby": "sindresorhus/globby#main",
      "node-gyp": "^9.4.0",
      "@babel/parser-7.0.0": "npm:@babel/parser@7.0.0",
      "@babel/parser-7.12.0": "npm:@babel/parser@7.12.0",
      "@babel/parser-7.22.0": "npm:@babel/parser@7.22.0",
      "@babel/parser-7.9.0": "npm:@babel/parser@7.9.0",
      "babel-plugin-add-import-extension": "^1.6.0",
      "jest-serializer-ansi-escapes": "^2.0.1",
      "all-chars": "^1.0.0",
      "compare-versions": "^6.0.0-rc.1",
      "@svitejs/changesets-changelog-github-compact": "^0.1.1",
      "@testing-library/dom": "^9.0.1",
      "@testing-library/preact": "^3.2.3",
      "@types/react-redux": "^7.1.25",
      "builder": "^5.0.0",
      "fast-deep-equal": "3.1.3",
      "fast-deep-equal-git": "epoberezkin/fast-deep-equal#v3.1.3",
      "nano-equal": "^2.0.2",
      "preact": "^10.13.1",
      "react-redux": "^8.0.5",
      "shallow-equal-fuzzy": "0.0.2",
      "@codemirror/lang-css": "^6.0.1",
      "@codemirror/lang-javascript": "^6.1.2",
      "@codemirror/lint": "^6.1.0",
      "@codemirror/theme-one-dark": "^6.1.0",
      "@napi-rs/cli": "^2.14.0",
      "autoprefixer": "^10.4.20",
      "caniuse-lite": "^1.0.30001660",
      "cssnano": "^5.0.8",
      "markdown-it-anchor": "^8.6.6",
      "markdown-it-prism": "^2.3.0",
      "markdown-it-table-of-contents": "^0.6.0",
      "napi-wasm": "^1.0.1",
      "patch-package": "^6.5.0",
      "path-browserify": "^1.0.1",
      "postcss": "^8.3.11",
      "posthtml-include": "^1.7.4",
      "posthtml-markdownit": "^1.3.1",
      "posthtml-prism": "^1.0.4",
      "sharp": "^0.31.1",
      "util": "^0.12.4",
      "clean-publish": "^3.1.0",
      "concat-stream": "^2.0.0",
      "is-nan": "^1.3.0",
      "split": "^1.0.1",
      "co": "4.6.0",
      "cogent": "1.0.1",
      "gnode": "0.1.2",
      "Base64": "1.1.0",
      "setimmediate": "1.0.5",
      "simple-asyncify": "1.0.0",
      "@nodelib/fs.walk": "^1.2.8"
    }
  },
  "app_story": {
    "routes": [
      "navigateToTab",
      "router.push"
    ],
    "patterns": {
      "useState": 3,
      "useEventStore.subscribe": 1,
      "useAuth - Manages authentication state": 7,
      "useAuthStore": 1,
      "useSharedValue - Manages local state": 1,
      "useRouter.mockImplementation": 1,
      "useCallback": 3,
      "useSharedValue": 1,
      "useEventStore - Manages local state": 4,
      "useNavigationStore": 3,
      "useDiscoveryFeed - Manages local state": 4,
      "useLocalSearchParams - Manages local state": 2,
      "useNetInfo - Manages local state": 1,
      "useEventDisplayState - Fetches event display data": 2,
      "useQRGeneration - Manages local state": 3,
      "useEventDisplayState": 2,
      "useRole": 8,
      "useEventDisplayState.getState": 2,
      "useQRGeneration": 2,
      "useSegments.mockReturnValue": 2,
      "useMemo": 1,
      "useScannerStore": 4,
      "useRouter.mockReturnValue": 1,
      "useTicketStore": 5,
      "useAuth": 7,
      "useRouter - Expo Router hook for navigation": 11,
      "useRole.mockImplementation": 1,
      "useFonts": 1,
      "useNavigationStore - Controls navigation": 3,
      "useEventStore.getState": 2,
      "useRole.mockReturnValue": 2,
      "useRouter": 11,
      "useNavigation.mockReturnValue": 2,
      "useState - Manages component state": 10,
      "useDiscoveryFeed": 4,
      "useLocalSearchParams": 2,
      "useMemo - Memoizes values": 1,
      "useDiscoveryStore - Manages local state": 4,
      "useDiscoveryStore": 4,
      "useEffect": 8,
      "useScannerStore - Manages local state": 4,
      "useWindowDimensions - Manages local state": 1,
      "useSegments": 4,
      "useAnimatedScrollHandler": 1,
      "useAnimatedStyle - Manages animated styles": 1,
      "useFonts - Manages local state": 1,
      "useAuthStore - Handles authentication logic": 1,
      "useSegments.mockImplementation": 1,
      "useTicketStore - Manages local state": 5,
      "useScrollValue": 2,
      "useCallback - Memoizes functions": 3,
      "useRole - Manages authentication state": 8,
      "useContext": 2,
      "useEventStore": 4,
      "useAnimatedScrollHandler - Manages local state": 1,
      "useScrollValue - Manages scroll state": 3,
      "useWindowDimensions": 1,
      "useContext - Accesses app-wide context": 2,
      "useSegments - Expo Router hook for route segments": 4,
      "useNetInfo": 1,
      "useEffect - Handles side effects on mount/update": 11,
      "useAuth.mockImplementation": 2,
      "useEventDisplayState.mockImplementation": 1,
      "useAnimatedStyle": 1
    },
    "jsx_usage": {}
  },
  "routes": {
    "app/(routes)/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "screenOptions: function",
        "isAttendee",
        "role"
      ],
      "hooks": [
        "useRole - Manages authentication state",
        "useRole"
      ],
      "key_logic": [
        "Switches behavior by user role"
      ],
      "depends_on": [
        "components/Core/Role/hooks/useRole.js",
        "expo-router",
        "../../components/Core/Role/hooks/useRole",
        "../../components/Core/Role/config/roles"
      ]
    },
    "app/(routes)/attendee/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "allowedRoles",
        "screenOptions: function"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router",
        "react-native",
        "../../../components/Core/Role/guards/RoleGuard",
        "../../../components/Core/Role/config/roles",
        "../../../components/Core/Navigation/components/NavigationBar"
      ]
    },
    "app/(routes)/attendee/profile.jsx": {
      "purpose": "Handles profile functionality",
      "props": [
        "onClose: function",
        "role",
        "isAttendee",
        "isLoading"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useRole - Manages authentication state",
        "useRouter",
        "useRole"
      ],
      "key_logic": [
        "Switches behavior by user role",
        "Branches on conditions",
        "if on `isLoading`"
      ],
      "depends_on": [
        "expo-router",
        "components/Core/Role/hooks/useRole.js",
        "react",
        "react-native",
        "../../../components/Features/Profile/components/AttendeeProfileView",
        "../../../components/Features/Profile/components/ProfileMenu",
        "../../../components/Core/Role/hooks/useRole"
      ]
    },
    "app/(routes)/attendee/tickets.jsx": {
      "purpose": "Handles tickets functionality",
      "key_logic": [
        "Executes core functionality",
        "Responds to scroll events",
        "Iterates over data",
        "maps `upcomingTickets`",
        "maps `pastTickets`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@expo/vector-icons"
      ]
    },
    "app/(routes)/business/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "allowedRoles",
        "screenOptions: function"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router",
        "react-native",
        "../../../components/Core/Role/guards/RoleGuard",
        "../../../components/Core/Role/config/roles",
        "../../../components/Core/Navigation/components/NavigationBar"
      ]
    },
    "app/(routes)/business/qrscanner.jsx": {
      "purpose": "Handles qrscanner functionality",
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@expo/vector-icons"
      ]
    },
    "app/(routes)/business/account.jsx": {
      "purpose": "Handles account functionality",
      "props": [
        "onClose: function",
        "role",
        "isAttendee",
        "isLoading",
        "isOrganizer",
        "isVenue"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useRole - Manages authentication state",
        "useRouter",
        "useRole"
      ],
      "key_logic": [
        "Switches behavior by user role",
        "Branches on conditions",
        "if on `isLoading`",
        "if on `isOrganizer`"
      ],
      "depends_on": [
        "expo-router",
        "components/Core/Role/hooks/useRole.js",
        "react",
        "react-native",
        "../../../components/Features/Profile/components/BusinessProfileView",
        "../../../components/Features/Profile/components/ProfileMenu",
        "../../../components/Core/Role/hooks/useRole"
      ]
    },
    "app/(shared)/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "screenOptions: function"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router",
        "react-native",
        "../../components/Core/Auth/guards/AuthRoleGuard"
      ]
    },
    "app/(shared)/discovery.jsx": {
      "purpose": "Handles discovery functionality",
      "props": [
        "fallback",
        "scrollY",
        "previousScrollY",
        "isScrollingUp",
        "view",
        "setViewType"
      ],
      "hooks": [
        "useDiscoveryStore - Manages local state",
        "useScrollValue - Manages scroll state",
        "useEffect - Handles side effects on mount/update",
        "useAnimatedStyle - Manages animated styles",
        "useDiscoveryStore",
        "useScrollValue",
        "useAnimatedStyle"
      ],
      "key_logic": [
        "Animates UI elements"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-safe-area-context",
        "react-native-unistyles",
        "react-native-reanimated",
        "../../components/Core/Middleware/state/discoveryState",
        "../../components/Core/Navigation/state/scroll.context",
        "../../components/Core/UI/AnimationErrorBoundary",
        "../../assets/icons/GetReal-Light-BkGr.svg",
        "../../components/Features/Discovery/components/EventTypeSelector",
        "../../components/Features/Discovery/components/FeedDisplay"
      ]
    },
    "app/(shared)/chat.jsx": {
      "purpose": "Handles chat functionality",
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "app/(shared)/event/[id].js": {
      "purpose": "Handles [id] functionality",
      "props": [
        "id"
      ],
      "hooks": [
        "useLocalSearchParams - Manages local state",
        "useLocalSearchParams"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "react-native"
      ]
    }
  },
  "data": {
    "components/Core/Auth/state/auth.store.js": {
      "purpose": "Manages auth.store state",
      "key_logic": [
        "Manages state transitions"
      ],
      "depends_on": [
        "zustand"
      ]
    },
    "components/Core/Navigation/state/navigation.store.js": {
      "purpose": "Manages navigation.store state",
      "props": [
        "currentTab"
      ],
      "key_logic": [
        "Tracks current position",
        "Manages state transitions",
        "Branches on conditions",
        "if on `tab === state.currentTab`",
        "if on `tab === search`",
        "if on `navigationHistory.length > 1`"
      ],
      "depends_on": [
        "zustand"
      ]
    },
    "components/Features/Tickets/store/qr.store.js": {
      "purpose": "Manages qr.store state",
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions",
        "Branches on conditions"
      ],
      "depends_on": [
        "zustand"
      ]
    },
    "components/Features/Tickets/store/scanner.store.js": {
      "purpose": "Manages scanner.store state",
      "key_logic": [
        "Manages state transitions"
      ],
      "depends_on": [
        "zustand"
      ]
    },
    "components/Features/Discovery/state/discovery.store.js": {
      "purpose": "Manages discovery.store state",
      "key_logic": [
        "Branches on conditions",
        "Manages state transitions",
        "if on `error`"
      ],
      "depends_on": [
        "zustand"
      ]
    },
    "components/Features/Search/state/search.store.js": {
      "purpose": "Manages search.store state"
    },
    "components/Features/Profile/state/profile.store.js": {
      "purpose": "Manages profile.store state"
    },
    "components/Features/Hub/state/hub.store.js": {
      "purpose": "Manages hub.store state",
      "key_logic": [
        "Manages state transitions"
      ],
      "depends_on": [
        "zustand"
      ]
    },
    "lib/supabase/client.js": {
      "purpose": "Handles client functionality",
      "calls": [
        "supabase.from"
      ],
      "key_logic": [
        "Branches on conditions",
        "if on `error`"
      ],
      "depends_on": [
        "react-native-url-polyfill/auto",
        "@react-native-async-storage/async-storage",
        "@supabase/supabase-js",
        "@supabase/realtime-js"
      ]
    },
    "lib/supabase/index.js": {
      "purpose": "Handles index functionality",
      "key_logic": [
        "Executes core functionality"
      ]
    },
    "lib/supabase/queries/events/builders.js": {
      "purpose": "Handles builders functionality",
      "calls": [
        "supabase.from"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions",
        "if on `type`",
        "sets `query`",
        "if on `searchQuery`"
      ],
      "depends_on": [
        "../../client"
      ]
    },
    "lib/supabase/queries/events/transformers.js": {
      "purpose": "Renders transformers UI",
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions",
        "sets `acc.gender`",
        "if on `venue_profiles`",
        "sets `location.name`",
        "sets `location.address`",
        "sets `location.area`",
        "sets `location.coordinates`",
        "sets `location.accessibility`"
      ],
      "depends_on": [
        "../../services/locations"
      ]
    },
    "lib/supabase/queries/events/index.js": {
      "purpose": "Handles index functionality",
      "calls": [
        "supabase.rpc"
      ],
      "key_logic": [
        "Tracks current position",
        "Branches on conditions",
        "Iterates over data",
        "if on `countError`",
        "if on `error`",
        "maps `data`",
        "if on `fetchError`"
      ],
      "depends_on": [
        "../../client",
        "./builders",
        "./transformers"
      ]
    },
    "lib/supabase/services/locations.js": {
      "purpose": "Handles locations functionality",
      "calls": [
        "supabase.from"
      ],
      "key_logic": [
        "Branches on conditions",
        "if on `error`",
        "if on `searchError`"
      ],
      "depends_on": [
        "../client"
      ]
    },
    "lib/supabase/services/storage.js": {
      "purpose": "Handles storage functionality",
      "key_logic": [
        "Branches on conditions",
        "if on `error`",
        "if on `folder`"
      ],
      "depends_on": [
        "../client"
      ]
    }
  },
  "components": {
    "jest.setup.js": {
      "purpose": "Handles jest.setup functionality",
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router"
      ]
    },
    "index.js": {
      "purpose": "Handles index functionality",
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router",
        "expo-router/entry",
        "./unistyles"
      ]
    },
    "theme.js": {
      "purpose": "Handles theme functionality",
      "key_logic": [
        "Executes core functionality"
      ]
    },
    "metro.config.js": {
      "purpose": "Handles metro.config functionality",
      "key_logic": [
        "Executes core functionality",
        "sets `undefined.asyncRequireModulePath`",
        "sets `undefined.assetExts`",
        "sets `undefined.sourceExts`",
        "sets `undefined.babelTransformerPath`",
        "sets `module.exports`"
      ]
    },
    "babel.config.js": {
      "purpose": "Handles babel.config functionality",
      "key_logic": [
        "Executes core functionality",
        "sets `module.exports`"
      ]
    },
    "unistyles.js": {
      "purpose": "Handles unistyles functionality",
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react-native-unistyles"
      ]
    },
    "eslint.config.js": {
      "purpose": "Handles eslint.config functionality",
      "key_logic": [
        "Executes core functionality",
        "sets `module.exports`"
      ]
    },
    "app/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "screenOptions: function",
        "currentTab",
        "initialize"
      ],
      "hooks": [
        "useSegments - Expo Router hook for route segments",
        "useNavigationStore - Controls navigation",
        "useEffect - Handles side effects on mount/update",
        "useFonts - Manages local state",
        "useSegments",
        "useNavigationStore",
        "useFonts"
      ],
      "key_logic": [
        "Tracks current position",
        "Responds to scroll events",
        "Branches on conditions",
        "if on `isPublicRoute`",
        "if on `inAuthGroup`",
        "if on `fontError`"
      ],
      "depends_on": [
        "expo-router",
        "react",
        "react-native",
        "../components/Core/Auth/providers/AuthProvider",
        "../components/Core/Navigation/components/NavigationBar",
        "../components/Core/Navigation/state/navigation.store",
        "react-native-unistyles",
        "expo-font",
        "../components/Core/Navigation/state/scroll.context"
      ]
    },
    "app/error.js": {
      "purpose": "Handles error functionality",
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react-native"
      ]
    },
    "app/(aux)/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "screenOptions: function"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router",
        "../../components/Core/Auth/guards/AuthRoleGuard"
      ]
    },
    "app/(aux)/hub/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "options: function",
        "user"
      ],
      "hooks": [
        "useAuth - Manages authentication state",
        "useAuth"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "components/Core/Auth/hooks/useAuth.js",
        "expo-router",
        "../../../components/Core/Auth/providers/AuthProvider"
      ]
    },
    "app/(aux)/hub/attendee/faq.jsx": {
      "purpose": "Handles faq functionality",
      "props": [
        "onPress: function"
      ],
      "hooks": [
        "useState - Manages component state"
      ],
      "key_logic": [
        "Responds to scroll events",
        "Manages state transitions",
        "Iterates over data",
        "if on `expandedIndex === index`",
        "maps `faqs`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@expo/vector-icons"
      ]
    },
    "app/(aux)/hub/attendee/terms.jsx": {
      "purpose": "Handles terms functionality",
      "key_logic": [
        "Evaluates capacity limits",
        "Responds to scroll events",
        "Iterates over data",
        "maps `data`",
        "maps `sections`"
      ],
      "depends_on": [
        "react",
        "react-native"
      ]
    },
    "app/(aux)/hub/organizer/faq.jsx": {
      "purpose": "Handles faq functionality",
      "props": [
        "onPress: function"
      ],
      "hooks": [
        "useState - Manages component state"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Responds to scroll events",
        "Manages state transitions",
        "Iterates over data",
        "if on `expandedIndex === index`",
        "maps `faqs`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@expo/vector-icons"
      ]
    },
    "app/(aux)/hub/organizer/terms.jsx": {
      "purpose": "Handles terms functionality",
      "key_logic": [
        "Evaluates capacity limits",
        "Responds to scroll events",
        "Iterates over data",
        "maps `data`",
        "maps `sections`"
      ],
      "depends_on": [
        "react",
        "react-native"
      ]
    },
    "app/(aux)/hub/venue/faq.jsx": {
      "purpose": "Handles faq functionality",
      "props": [
        "onPress: function"
      ],
      "hooks": [
        "useState - Manages component state"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Responds to scroll events",
        "Manages state transitions",
        "Iterates over data",
        "if on `expandedIndex === index`",
        "maps `faqs`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@expo/vector-icons"
      ]
    },
    "app/(aux)/hub/venue/terms.jsx": {
      "purpose": "Handles terms functionality",
      "key_logic": [
        "Evaluates capacity limits",
        "Responds to scroll events",
        "Iterates over data",
        "maps `data`",
        "maps `sections`"
      ],
      "depends_on": [
        "react",
        "react-native"
      ]
    },
    "app/(auth)/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "screenOptions: function"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router"
      ]
    },
    "app/(auth)/forgot.jsx": {
      "purpose": "Handles forgot functionality",
      "props": [
        "onPress: function"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useRouter"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "react-native"
      ]
    },
    "app/(auth)/login.jsx": {
      "purpose": "Handles login functionality",
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react-native",
        "../../components/Core/Auth/components/LoginForm"
      ]
    },
    "app/(auth)/register.jsx": {
      "purpose": "Handles register functionality",
      "props": [
        "onPress: function"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useRouter"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "react-native"
      ]
    },
    "app/(modals)/_layout.jsx": {
      "purpose": "Handles _layout functionality",
      "props": [
        "screenOptions: function"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router"
      ]
    },
    "app/(modals)/search.jsx": {
      "purpose": "Handles search functionality",
      "props": [
        "onDismiss: function",
        "currentTab",
        "setCurrentTab"
      ],
      "hooks": [
        "useNavigationStore - Controls navigation",
        "useNavigationStore"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "expo-router",
        "react-native",
        "../../components/Core/Navigation/state/navigation.store",
        "../../components/Features/Search/components/SearchBar",
        "../../components/Features/Search/components/SearchResults",
        "../../components/Features/Search/components/SearchFilters"
      ]
    },
    "dist/_expo/static/js/web/entry-153ecead34a371f47bdc76e070e654cc.js": {
      "purpose": "",
      "props": [
        "render:e",
        "children:r"
      ]
    },
    "components/Core/UI/TodayLogo.jsx": {
      "purpose": "Handles todaylogo functionality",
      "props": [
        "source"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native"
      ]
    },
    "components/Core/UI/FemaleIcon.jsx": {
      "purpose": "Handles femaleicon functionality",
      "props": [
        "width",
        "size",
        "style"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "../../../assets/icons/female-icon.svg"
      ]
    },
    "components/Core/UI/MaleIcon.jsx": {
      "purpose": "Handles maleicon functionality",
      "props": [
        "width",
        "size",
        "style"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "../../../assets/icons/male-icon.svg"
      ]
    },
    "components/Core/UI/AnimationErrorBoundary.jsx": {
      "purpose": "Handles animationerrorboundary functionality",
      "key_logic": [
        "Branches on conditions",
        "sets `undefined.state`",
        "if on `fallback`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Core/UI/LoadingIndicator.jsx": {
      "purpose": "Handles loadingindicator functionality",
      "props": [
        "size",
        "style"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Core/UI/Ampersand.jsx": {
      "purpose": "Handles ampersand functionality",
      "props": [
        "width",
        "size"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "../../../assets/icons/Ampersand.svg"
      ]
    },
    "components/Core/UI/ArrowNarrow.jsx": {
      "purpose": "Handles arrownarrow functionality",
      "props": [
        "width",
        "size",
        "style"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "../../../assets/icons/arrow-narrow.svg"
      ]
    },
    "components/Core/UI/ChevronDoubleRight.jsx": {
      "purpose": "Handles chevrondoubleright functionality",
      "props": [
        "width"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "../../../assets/icons/chevron-double-right.svg"
      ]
    },
    "components/Core/UI/ErrorDisplay.jsx": {
      "purpose": "Handles errordisplay functionality",
      "props": [
        "onPress: function",
        "message",
        "onRetry",
        "style"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Core/UI/List/ListView.js": {
      "purpose": "Handles listview functionality",
      "props": [
        "data",
        "renderItem",
        "keyExtractor",
        "ListEmptyComponent",
        "ListLoadingComponent",
        "refreshing",
        "onRefresh",
        "onEndReached",
        "loading",
        "error",
        "estimatedItemSize"
      ],
      "key_logic": [
        "Branches on conditions",
        "if on `loading`",
        "if on `error`"
      ],
      "depends_on": [
        "react-native",
        "@shopify/flash-list",
        "../../../../theme"
      ]
    },
    "components/Core/UI/List/ChatList.js": {
      "purpose": "Handles chatlist functionality",
      "props": [
        "data",
        "messages",
        "loadMoreMessages",
        "refreshMessages",
        "refreshing",
        "loading"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "./ListView"
      ]
    },
    "components/Core/UI/List/EventFeedList.js": {
      "purpose": "Renders eventfeedlist UI",
      "props": [
        "data",
        "events",
        "loadMoreEvents",
        "refreshEvents",
        "refreshing",
        "loading"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "./ListView"
      ]
    },
    "components/Core/UI/List/OrganizerFeedList.js": {
      "purpose": "Renders organizerfeedlist UI",
      "props": [
        "data",
        "organizers",
        "loadMoreOrganizers",
        "refreshing",
        "loading"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "./ListView"
      ]
    },
    "components/Core/Middleware/coordinator/DomainRegistry.js": {
      "purpose": "Handles domainregistry functionality",
      "key_logic": [
        "Branches on conditions",
        "sets `undefined.domains`"
      ]
    },
    "components/Core/Middleware/coordinator/StateCoordinator.js": {
      "purpose": "Manages statecoordinator state",
      "key_logic": [
        "Tracks current position",
        "Manages state transitions",
        "Branches on conditions",
        "sets `undefined.subscribers`",
        "sets `undefined.stateCache`",
        "sets `undefined.transactionLog`",
        "if on `subscribers`"
      ]
    },
    "components/Core/Middleware/coordinator/TransactionManager.js": {
      "purpose": "Handles transactionmanager functionality",
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions",
        "sets `undefined.transactions`",
        "sets `undefined.log`",
        "sets `transaction.status`",
        "sets `transaction.commitTime`",
        "sets `transaction.rollbackTime`",
        "if on `age > maxAge`"
      ]
    },
    "components/Core/Middleware/coordinator/ValidationEngine.js": {
      "purpose": "Handles validationengine functionality",
      "key_logic": [
        "Tracks current position",
        "Branches on conditions",
        "Iterates over data",
        "sets `undefined.validators`",
        "sets `undefined.crossDomainRules`",
        "maps `data`",
        "maps `rules`"
      ]
    },
    "components/Core/Middleware/state/eventDisplayState.js": {
      "purpose": "Manages eventdisplaystate state",
      "hooks": [
        "useEventStore.getState",
        "useEventStore.subscribe",
        "useEventDisplayState.getState"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions",
        "Branches on conditions",
        "if on `current >= max`",
        "if on `stage === upcoming`",
        "if on `engagementPercentage > 100`",
        "if on `stage === scheduled_pending`",
        "if on `stage === recorded`",
        "sets `capacity.stage`",
        "if on `cached`",
        "if on `undefined.eventId !== undefined.eventId`"
      ],
      "depends_on": [
        "zustand",
        "./eventState"
      ]
    },
    "components/Core/Middleware/state/eventState.js": {
      "purpose": "Manages eventstate state",
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions",
        "Branches on conditions",
        "if on `error`",
        "if on `localEvent`",
        "if on `event`"
      ],
      "depends_on": [
        "zustand",
        "../coordinator/StateCoordinator",
        "../../../../lib/supabase"
      ]
    },
    "components/Core/Middleware/state/discoveryState.js": {
      "purpose": "Manages discoverystate state",
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions",
        "Branches on conditions",
        "if on `error`"
      ],
      "depends_on": [
        "zustand",
        "../../../../lib/supabase/client",
        "../../../../lib/supabase/queries/events/index",
        "../../../../lib/supabase/queries/events/builders"
      ]
    },
    "components/Core/Middleware/state/qrState.js": {
      "purpose": "Manages qrstate state",
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions",
        "Branches on conditions",
        "if on `qr`"
      ],
      "depends_on": [
        "zustand",
        "../coordinator/StateCoordinator"
      ]
    },
    "components/Core/Middleware/state/ticketState.js": {
      "purpose": "Manages ticketstate state",
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions",
        "Branches on conditions",
        "if on `ticket`"
      ],
      "depends_on": [
        "zustand",
        "../coordinator/StateCoordinator"
      ]
    },
    "components/Core/Middleware/state/__tests__/eventDisplayState.test.js": {
      "purpose": "Manages eventdisplaystate.test state",
      "hooks": [
        "useEventDisplayState.getState"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions"
      ],
      "depends_on": [
        "../eventDisplayState"
      ]
    },
    "components/Core/Role/_test_/RoleGuard.test.js": {
      "purpose": "Controls access based on role.test",
      "props": [
        "allowedRoles",
        "fallbackRoute",
        "isAttendee"
      ],
      "hooks": [
        "useRouter.mockImplementation",
        "useSegments.mockImplementation",
        "useRole.mockImplementation",
        "useAuth.mockImplementation"
      ],
      "calls": [
        "isMockEnabled()"
      ],
      "key_logic": [
        "Switches behavior by user role"
      ],
      "depends_on": [
        "expo-router",
        "react",
        "react-native",
        "@testing-library/react-native",
        "../guards/RoleGuard",
        "../hooks/useRole",
        "../../Auth/providers/AuthProvider",
        "../config/roles"
      ]
    },
    "components/Core/Role/_test_/roles.test.js": {
      "purpose": "Handles roles.test functionality",
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "../config/roles"
      ]
    },
    "components/Core/Role/_test_/useRole.test.js": {
      "purpose": "Provides userole.test logic",
      "props": [
        "isAttendee"
      ],
      "hooks": [
        "useRole - Manages authentication state",
        "useAuth.mockImplementation",
        "useRole"
      ],
      "key_logic": [
        "Switches behavior by user role",
        "Tracks current position"
      ],
      "depends_on": [
        "components/Core/Role/hooks/useRole.js",
        "@testing-library/react-native",
        "../hooks/useRole",
        "../../Auth/providers/AuthProvider",
        "../config/roles"
      ]
    },
    "components/Core/Role/config/roles.js": {
      "purpose": "Handles roles functionality",
      "key_logic": [
        "Branches on conditions",
        "if on `role === ROLES.ATTENDEE`"
      ]
    },
    "components/Core/Role/utils/mockUtils.js": {
      "purpose": "Handles mockutils functionality",
      "calls": [
        "isMockEnabled()"
      ],
      "key_logic": [
        "Executes core functionality"
      ]
    },
    "components/Core/Role/hooks/useRole.js": {
      "purpose": "Provides userole logic",
      "props": [
        "isAttendee",
        "user",
        "isLoading"
      ],
      "hooks": [
        "useAuth - Manages authentication state",
        "useAuth"
      ],
      "key_logic": [
        "Switches behavior by user role"
      ],
      "depends_on": [
        "components/Core/Auth/hooks/useAuth.js",
        "../../Auth/providers/AuthProvider",
        "../config/roles"
      ]
    },
    "components/Core/Role/guards/RoleGuard.jsx": {
      "purpose": "Controls access based on role",
      "props": [
        "isAttendee",
        "children",
        "allowedRoles",
        "fallbackRoute",
        "role",
        "canAccess",
        "isAuthenticated"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useSegments - Expo Router hook for route segments",
        "useRole - Manages authentication state",
        "useAuth - Manages authentication state",
        "useEffect - Handles side effects on mount/update",
        "useRouter",
        "useSegments",
        "useRole",
        "useAuth",
        "useEffect"
      ],
      "calls": [
        "isMockEnabled()"
      ],
      "key_logic": [
        "Switches behavior by user role",
        "Tracks current position",
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "components/Core/Role/hooks/useRole.js",
        "components/Core/Auth/hooks/useAuth.js",
        "react",
        "../hooks/useRole",
        "../../Auth/providers/AuthProvider",
        "../utils/mockUtils"
      ]
    },
    "components/Core/Auth/providers/AuthProvider.jsx": {
      "purpose": "Handles authprovider functionality",
      "props": [
        "value",
        "children",
        "user",
        "isAuthenticated",
        "login",
        "logout",
        "switchRole"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useSegments - Expo Router hook for route segments",
        "useAuthStore - Handles authentication logic",
        "useEffect - Handles side effects on mount/update",
        "useContext - Accesses app-wide context",
        "useRouter",
        "useSegments",
        "useAuthStore",
        "useEffect",
        "useContext"
      ],
      "key_logic": [
        "Branches on conditions",
        "if on `undefined.EXPO_PUBLIC_USE_MOCKS !== true`",
        "if on `roleToSwitch === ATTENDEE`"
      ],
      "depends_on": [
        "expo-router",
        "react",
        "../state/auth.store"
      ]
    },
    "components/Core/Auth/components/ResetPasswordForm.jsx": {
      "purpose": "Renders resetpasswordform UI"
    },
    "components/Core/Auth/components/RegisterForm.jsx": {
      "purpose": "Renders registerform UI"
    },
    "components/Core/Auth/components/ForgotPasswordForm.jsx": {
      "purpose": "Renders forgotpasswordform UI"
    },
    "components/Core/Auth/hooks/useAuth.js": {
      "purpose": "Provides useauth logic"
    },
    "components/Core/Auth/guards/AuthRoleGuard.jsx": {
      "purpose": "Controls access based on authrole",
      "props": [
        "isAttendee",
        "children",
        "allowedRoles",
        "requireAuth",
        "fallbackRoute",
        "isAuthenticated",
        "role",
        "isValidRole"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useAuth - Manages authentication state",
        "useRole - Manages authentication state",
        "useEffect - Handles side effects on mount/update",
        "useRouter",
        "useAuth",
        "useRole",
        "useEffect"
      ],
      "key_logic": [
        "Switches behavior by user role",
        "Branches on conditions",
        "if on `undefined.EXPO_PUBLIC_USE_MOCKS === true`",
        "if on `allowedRoles`"
      ],
      "depends_on": [
        "expo-router",
        "components/Core/Auth/hooks/useAuth.js",
        "components/Core/Role/hooks/useRole.js",
        "react",
        "../providers/AuthProvider",
        "../../Role/hooks/useRole"
      ]
    },
    "components/Core/Auth/guards/AuthGuard.jsx": {
      "purpose": "Controls access based on auth",
      "props": [
        "children",
        "requireAuth",
        "fallbackRoute",
        "isAuthenticated"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useSegments - Expo Router hook for route segments",
        "useAuth - Manages authentication state",
        "useEffect - Handles side effects on mount/update",
        "useRouter",
        "useSegments",
        "useAuth",
        "useEffect"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "components/Core/Auth/hooks/useAuth.js",
        "react",
        "../providers/AuthProvider"
      ]
    },
    "components/Core/Navigation/_tests_/NavigationBar.styles.test.jsx": {
      "purpose": "Renders role-based navigationbar.styles.test UI",
      "props": [
        "testID",
        "currentTab",
        "isAttendee"
      ],
      "hooks": [
        "useNavigation.mockReturnValue",
        "useRole.mockReturnValue",
        "useSegments.mockReturnValue"
      ],
      "key_logic": [
        "Renders tabs by role",
        "Switches behavior by user role",
        "Tracks current position"
      ],
      "depends_on": [
        "expo-router",
        "react",
        "@testing-library/react-native",
        "../components/NavigationBar",
        "../hooks/useNavigation",
        "../../Role/hooks/useRole"
      ]
    },
    "components/Core/Navigation/_tests_/NavigationBar.test.jsx": {
      "purpose": "Renders role-based navigationbar.test UI",
      "props": [
        "currentTab",
        "isAttendee"
      ],
      "hooks": [
        "useNavigation.mockReturnValue",
        "useRouter.mockReturnValue",
        "useSegments.mockReturnValue",
        "useRole.mockReturnValue"
      ],
      "key_logic": [
        "Renders tabs by role",
        "Switches behavior by user role"
      ],
      "depends_on": [
        "expo-router",
        "react",
        "@testing-library/react-native",
        "../components/NavigationBar",
        "../hooks/useNavigation",
        "../../Role/hooks/useRole"
      ]
    },
    "components/Core/Navigation/utils/performance.js": {
      "purpose": "Renders performance UI",
      "key_logic": [
        "Responds to scroll events",
        "Branches on conditions",
        "sets `undefined.lastScrollTime`",
        "sets `undefined.lastFrameTime`",
        "sets `undefined.droppedFrames`",
        "sets `undefined.totalFrames`",
        "sets `undefined.isEnabled`",
        "if on `timeSinceLastScroll < THRESHOLDS.SCROLL_DELAY`",
        "if on `frameDuration > THRESHOLDS.FRAME_DROP_THRESHOLD`"
      ],
      "depends_on": [
        "react-native"
      ]
    },
    "components/Core/Navigation/state/scroll.context.js": {
      "purpose": "Handles scroll.context functionality",
      "props": [
        "value",
        "scrollY",
        "previousScrollY",
        "isScrollingUp"
      ],
      "hooks": [
        "useSharedValue - Manages local state",
        "useEffect - Handles side effects on mount/update",
        "useScrollValue - Manages scroll state",
        "useContext - Accesses app-wide context",
        "useSharedValue",
        "useContext"
      ],
      "key_logic": [
        "Responds to scroll events",
        "Branches on conditions",
        "sets `scrollY.value`",
        "sets `previousScrollY.value`",
        "sets `isScrollingUp.value`"
      ],
      "depends_on": [
        "react",
        "react-native-reanimated"
      ]
    },
    "components/Core/Navigation/components/TabButton.jsx": {
      "purpose": "Handles tabbutton functionality",
      "key_logic": [
        "if on `isActive`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@expo/vector-icons"
      ]
    },
    "components/Core/Navigation/hooks/useNavigation.js": {
      "purpose": "Provides usenavigation logic",
      "props": [
        "currentTab",
        "isAttendee",
        "previousTab",
        "navigationHistory",
        "setCurrentTab",
        "goBack"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useRole - Manages authentication state",
        "useNavigationStore - Controls navigation",
        "useRouter",
        "useRole",
        "useNavigationStore"
      ],
      "calls": [
        "navigateToTab"
      ],
      "key_logic": [
        "Switches behavior by user role",
        "Tracks current position",
        "Branches on conditions",
        "if on `prevTab`"
      ],
      "depends_on": [
        "expo-router",
        "components/Core/Role/hooks/useRole.js",
        "../state/navigation.store",
        "../../Role/hooks/useRole"
      ]
    },
    "components/Features/Tickets/components/TicketList.jsx": {
      "purpose": "Handles ticketlist functionality",
      "props": [
        "data",
        "ticketId",
        "userId"
      ],
      "hooks": [
        "useTicketStore - Manages local state",
        "useTicketStore"
      ],
      "key_logic": [
        "Responds to scroll events",
        "Renders list-based UI",
        "Branches on conditions"
      ],
      "depends_on": [
        "react-native",
        "../../../Core/Middleware/state/ticketState",
        "./TicketCard"
      ]
    },
    "components/Features/Tickets/components/TicketCard.jsx": {
      "purpose": "Handles ticketcard functionality",
      "props": [
        "numberOfLines",
        "ticketId",
        "generateQR"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useTicketStore - Manages local state",
        "useEventStore - Manages local state",
        "useQRGeneration - Manages local state",
        "useRouter",
        "useTicketStore",
        "useEventStore",
        "useQRGeneration"
      ],
      "key_logic": [
        "Tracks current position",
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "react-native",
        "../../../Core/Middleware/state/ticketState",
        "../../../Core/Middleware/state/eventState",
        "./shared/TicketStatus",
        "./shared/BaseQR",
        "./shared/QRContainer",
        "../hooks/useQRGeneration"
      ]
    },
    "components/Features/Tickets/components/shared/TicketStatus.jsx": {
      "purpose": "Renders ticketstatus UI",
      "props": [
        "ticketId"
      ],
      "hooks": [
        "useTicketStore - Manages local state",
        "useTicketStore"
      ],
      "key_logic": [
        "Tracks current position",
        "Branches on conditions"
      ],
      "depends_on": [
        "react-native",
        "../../../../Core/Middleware/state/ticketState"
      ]
    },
    "components/Features/Tickets/components/shared/QRContainer.jsx": {
      "purpose": "Handles qrcontainer functionality",
      "props": [
        "children"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react-native"
      ]
    },
    "components/Features/Tickets/components/shared/BaseQR.jsx": {
      "purpose": "Handles baseqr functionality",
      "props": [
        "data",
        "value",
        "size"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react-native",
        "react-native-qrcode-styled"
      ]
    },
    "components/Features/Tickets/components/Scanner/components/LocationPrompt.jsx": {
      "purpose": "Handles locationprompt functionality",
      "props": [
        "onPress: function",
        "onLocationVerified"
      ],
      "hooks": [
        "useState - Manages component state",
        "useEffect - Handles side effects on mount/update",
        "useState",
        "useEffect"
      ],
      "key_logic": [
        "Branches on conditions",
        "Manages state transitions",
        "if on `status === granted`"
      ],
      "depends_on": [
        "react-native",
        "expo-location",
        "react"
      ]
    },
    "components/Features/Tickets/components/Scanner/components/ScanHistory.jsx": {
      "purpose": "Handles scanhistory functionality",
      "props": [
        "numberOfLines"
      ],
      "hooks": [
        "useScannerStore - Manages local state",
        "useTicketStore - Manages local state",
        "useEventStore - Manages local state",
        "useScannerStore",
        "useTicketStore",
        "useEventStore"
      ],
      "key_logic": [
        "Tracks current position",
        "Renders list-based UI",
        "Branches on conditions",
        "if on `isValid`",
        "if on `isUsed`"
      ],
      "depends_on": [
        "react-native",
        "../../../store/scanner.store",
        "../../../../../Core/Middleware/state/ticketState",
        "../../../../../Core/Middleware/state/eventState"
      ]
    },
    "components/Features/Tickets/components/Scanner/components/OfflineIndicator.jsx": {
      "purpose": "Handles offlineindicator functionality",
      "hooks": [
        "useNetInfo - Manages local state",
        "useNetInfo"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react-native",
        "@react-native-community/netinfo"
      ]
    },
    "components/Features/Tickets/components/Scanner/components/CameraView.jsx": {
      "purpose": "Handles cameraview functionality",
      "props": [
        "type",
        "onBarCodeScanned: function",
        "barCodeScannerSettings",
        "isScanning",
        "handleScan"
      ],
      "hooks": [
        "useScannerStore - Manages local state",
        "useScannerStore"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react-native",
        "expo-camera",
        "../../../store/scanner.store"
      ]
    },
    "components/Features/Tickets/components/Scanner/components/ValidationDisplay.jsx": {
      "purpose": "Handles validationdisplay functionality",
      "hooks": [
        "useScannerStore - Manages local state",
        "useTicketStore - Manages local state",
        "useEventStore - Manages local state",
        "useScannerStore",
        "useTicketStore",
        "useEventStore"
      ],
      "key_logic": [
        "Tracks current position",
        "Branches on conditions",
        "if on `error`",
        "if on `isValid`",
        "if on `isUsed`"
      ],
      "depends_on": [
        "react-native",
        "../../../store/scanner.store",
        "../../../../../Core/Middleware/state/ticketState",
        "../../../../../Core/Middleware/state/eventState"
      ]
    },
    "components/Features/Tickets/components/Scanner/views/ScannerView.jsx": {
      "purpose": "Handles scannerview functionality",
      "props": [
        "onLocationVerified: function",
        "startScanning",
        "stopScanning"
      ],
      "hooks": [
        "useState - Manages component state",
        "useScannerStore - Manages local state",
        "useState",
        "useScannerStore"
      ],
      "key_logic": [
        "Branches on conditions",
        "Manages state transitions"
      ],
      "depends_on": [
        "react-native",
        "react",
        "../../../store/scanner.store",
        "../components/CameraView",
        "../components/ValidationDisplay",
        "../components/OfflineIndicator",
        "../components/LocationPrompt",
        "../components/ScanHistory"
      ]
    },
    "components/Features/Tickets/hooks/useQRGeneration.js": {
      "purpose": "Provides useqrgeneration logic",
      "hooks": [
        "useQRGeneration - Manages local state",
        "useMemo - Memoizes values",
        "useMemo"
      ],
      "key_logic": [
        "Branches on conditions",
        "if on `type === event`",
        "if on `type === ticket`"
      ],
      "depends_on": [
        "react"
      ]
    },
    "components/Features/Discovery/_tests_/Discovery.test.jsx": {
      "purpose": "Handles discovery.test functionality",
      "props": [
        "feedType"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "@testing-library/react-native",
        "../components/FeedDisplay",
        "../utils/feedUtils"
      ]
    },
    "components/Features/Discovery/components/EventFeed.jsx": {
      "purpose": "Renders eventfeed UI",
      "props": [
        "event",
        "data",
        "eventType",
        "searchQuery",
        "isLoading",
        "isLoadingMore",
        "error",
        "hasMore",
        "items",
        "handleLoadMore",
        "handleRefresh"
      ],
      "hooks": [
        "useDiscoveryFeed - Manages local state",
        "useEffect - Handles side effects on mount/update",
        "useCallback - Memoizes functions",
        "useDiscoveryFeed",
        "useEffect",
        "useCallback"
      ],
      "key_logic": [
        "Branches on conditions",
        "if on `isLoadingMore`",
        "if on `isLoading`",
        "if on `error`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@shopify/flash-list",
        "react-native-unistyles",
        "../../../Core/UI/Ampersand",
        "../../Events/components/EventCard",
        "../hooks/useDiscoveryFeed"
      ]
    },
    "components/Features/Discovery/components/OrganizerFeed.jsx": {
      "purpose": "Renders organizerfeed UI",
      "props": [
        "searchQuery",
        "isLoading",
        "error",
        "handleRefresh"
      ],
      "hooks": [
        "useDiscoveryFeed - Manages local state",
        "useDiscoveryFeed"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions",
        "if on `isLoading`",
        "if on `error`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "../hooks/useDiscoveryFeed"
      ]
    },
    "components/Features/Discovery/components/EventTypeSelector.jsx": {
      "purpose": "Handles eventtypeselector functionality",
      "props": [
        "onPress: function",
        "view",
        "setView"
      ],
      "hooks": [
        "useDiscoveryStore - Manages local state",
        "useDiscoveryStore"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "../state/discovery.store"
      ]
    },
    "components/Features/Discovery/components/VenueFeed.jsx": {
      "purpose": "Renders venuefeed UI",
      "props": [
        "searchQuery",
        "isLoading",
        "error",
        "handleRefresh"
      ],
      "hooks": [
        "useDiscoveryFeed - Manages local state",
        "useDiscoveryFeed"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions",
        "if on `isLoading`",
        "if on `error`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "../hooks/useDiscoveryFeed"
      ]
    },
    "components/Features/Discovery/components/FeedDisplay.jsx": {
      "purpose": "Renders feeddisplay UI",
      "props": [
        "fallback",
        "scrollY",
        "previousScrollY",
        "isScrollingUp",
        "view",
        "filters",
        "items",
        "isLoading",
        "error",
        "setItems",
        "setIsLoading",
        "setError",
        "handleLoadMore",
        "handleRefresh"
      ],
      "hooks": [
        "useDiscoveryStore - Manages local state",
        "useDiscoveryFeed - Manages local state",
        "useScrollValue - Manages scroll state",
        "useState - Manages component state",
        "useEffect - Handles side effects on mount/update",
        "useAnimatedScrollHandler - Manages local state",
        "useCallback - Memoizes functions",
        "useDiscoveryStore",
        "useDiscoveryFeed",
        "useScrollValue",
        "useEffect",
        "useAnimatedScrollHandler",
        "useCallback"
      ],
      "key_logic": [
        "Tracks current position",
        "Responds to scroll events",
        "Manages state transitions",
        "Branches on conditions",
        "sets `isScrollingUp.value`",
        "sets `previousScrollY.value`",
        "sets `scrollY.value`",
        "sets `frameId`",
        "if on `error`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@shopify/flash-list",
        "react-native-unistyles",
        "react-native-reanimated",
        "../state/discovery.store",
        "../../../Core/Navigation/state/scroll.context",
        "../../../Core/Navigation/utils/performance",
        "../hooks/useDiscoveryFeed",
        "../../Events/components/EventCard",
        "../../../Core/UI/LoadingIndicator",
        "../../../Core/UI/ErrorDisplay",
        "../../../Core/UI/AnimationErrorBoundary",
        "../../../Core/UI/Ampersand",
        "../../../Core/Navigation/components/NavigationBar"
      ]
    },
    "components/Features/Discovery/hooks/useDiscoveryFeed.js": {
      "purpose": "Provides usediscoveryfeed logic",
      "props": [
        "isLoading",
        "isLoadingMore",
        "error",
        "hasMore",
        "page",
        "items",
        "setItems",
        "setPage",
        "setHasMore",
        "setError",
        "setIsLoading",
        "setIsLoadingMore"
      ],
      "hooks": [
        "useDiscoveryStore - Manages local state",
        "useCallback - Memoizes functions",
        "useDiscoveryStore",
        "useCallback",
        "useEventStore.getState"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Iterates over data",
        "Branches on conditions",
        "maps `data`"
      ],
      "depends_on": [
        "react",
        "../state/discovery.store",
        "../../../Core/Middleware/state/eventState"
      ]
    },
    "components/Features/Search/components/SearchResults.jsx": {
      "purpose": "Handles searchresults functionality",
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native"
      ]
    },
    "components/Features/Search/components/SearchFilters.jsx": {
      "purpose": "Handles searchfilters functionality",
      "props": [
        "horizontal: function",
        "showsHorizontalScrollIndicator: function",
        "contentContainerStyle: function",
        "onPress: function"
      ],
      "hooks": [
        "useState - Manages component state"
      ],
      "key_logic": [
        "Manages state transitions",
        "Responds to scroll events",
        "Iterates over data",
        "maps `filters`"
      ],
      "depends_on": [
        "react",
        "react-native"
      ]
    },
    "components/Features/Search/components/SearchBar.jsx": {
      "purpose": "Renders searchbar UI",
      "props": [
        "onPress: function",
        "onDismiss",
        "onSearch"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "@expo/vector-icons"
      ]
    },
    "components/Features/Search/hooks/useSearch.js": {
      "purpose": "Provides usesearch logic"
    },
    "components/Features/Profile/components/AttendeeProfileView.jsx": {
      "purpose": "Handles attendeeprofileview functionality",
      "props": [
        "source",
        "onClose",
        "user"
      ],
      "hooks": [
        "useAuth - Manages authentication state",
        "useAuth"
      ],
      "key_logic": [
        "Evaluates capacity limits"
      ],
      "depends_on": [
        "components/Core/Auth/hooks/useAuth.js",
        "react",
        "react-native",
        "@expo/vector-icons",
        "../../../Core/Auth/providers/AuthProvider"
      ]
    },
    "components/Features/Profile/components/BusinessProfileView.jsx": {
      "purpose": "Handles businessprofileview functionality",
      "props": [
        "source",
        "isAttendee",
        "onClose",
        "businessType",
        "isAccountView",
        "user",
        "role"
      ],
      "hooks": [
        "useAuth - Manages authentication state",
        "useRole - Manages authentication state",
        "useAuth",
        "useRole"
      ],
      "key_logic": [
        "Switches behavior by user role",
        "Evaluates capacity limits",
        "if on `isOrganizer`",
        "if on `businessType`"
      ],
      "depends_on": [
        "components/Core/Auth/hooks/useAuth.js",
        "components/Core/Role/hooks/useRole.js",
        "react",
        "react-native",
        "@expo/vector-icons",
        "../../../Core/Auth/providers/AuthProvider",
        "../../../Core/Role/hooks/useRole"
      ]
    },
    "components/Features/Profile/hooks/useProfile.js": {
      "purpose": "Provides useprofile logic"
    },
    "components/Features/Events/components/EventCard.jsx": {
      "purpose": "Handles eventcard functionality",
      "props": [
        "onPress: function",
        "event",
        "style",
        "width"
      ],
      "hooks": [
        "useRouter - Expo Router hook for navigation",
        "useWindowDimensions - Manages local state",
        "useRouter",
        "useWindowDimensions"
      ],
      "calls": [
        "router.push"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "react",
        "react-native",
        "react-native-unistyles",
        "@expo/vector-icons/Feather",
        "./shared/EventStatus",
        "./shared/EventHeader",
        "./shared/EventDescription",
        "./shared/EventPrice",
        "./shared/AgeRange",
        "./shared/EventDate",
        "./shared/EventLocation",
        "./shared/HeroDisplay",
        "./shared/JoinNowBtn"
      ]
    },
    "components/Features/Events/components/EventPage.jsx": {
      "purpose": "Handles eventpage functionality",
      "props": [
        "source",
        "eventId",
        "value",
        "id",
        "generateQR"
      ],
      "hooks": [
        "useLocalSearchParams - Manages local state",
        "useEventStore - Manages local state",
        "useQRGeneration - Manages local state",
        "useLocalSearchParams",
        "useEventStore",
        "useQRGeneration"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Responds to scroll events",
        "Branches on conditions"
      ],
      "depends_on": [
        "expo-router",
        "react-native",
        "../../../Core/Middleware/state/eventState",
        "./EventStatus",
        "../../Tickets/components/shared/BaseQR",
        "../../Tickets/components/shared/QRContainer",
        "../../Tickets/hooks/useQRGeneration"
      ]
    },
    "components/Features/Events/components/shared/ShareEventBtn.jsx": {
      "purpose": "Handles shareeventbtn functionality",
      "props": [
        "onPress: function",
        "activeOpacity",
        "onPress",
        "style"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Features/Events/components/shared/EventHeader.jsx": {
      "purpose": "Handles eventheader functionality",
      "props": [
        "status"
      ],
      "hooks": [
        "useEventDisplayState - Fetches event display data",
        "useEventDisplayState"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "components/Core/Middleware/state/eventDisplayState.js",
        "react",
        "react-native",
        "react-native-unistyles",
        "../../../../Core/UI/ArrowNarrow",
        "../../../../Core/Middleware/state/eventDisplayState"
      ]
    },
    "components/Features/Events/components/shared/EventStatus.jsx": {
      "purpose": "Renders eventstatus UI",
      "props": [
        "type",
        "state: array | object",
        "current",
        "iconStyle: function",
        "props"
      ],
      "hooks": [
        "useEventDisplayState - Fetches event display data",
        "useEventDisplayState"
      ],
      "key_logic": [
        "Renders gender-based progress",
        "Evaluates capacity limits",
        "Branches on conditions",
        "if on `isMin`",
        "if on `isMale`",
        "if on `direction === left`",
        "if on `current >= min`"
      ],
      "depends_on": [
        "components/Core/Middleware/state/eventDisplayState.js",
        "react",
        "react-native",
        "react-native-unistyles",
        "../../../../Core/UI/MaleIcon",
        "../../../../Core/UI/FemaleIcon",
        "./EventStage",
        "../../../../Core/Middleware/state/eventDisplayState"
      ]
    },
    "components/Features/Events/components/shared/EventLocation.jsx": {
      "purpose": "Handles eventlocation functionality",
      "props": [
        "location",
        "style"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "@expo/vector-icons/Feather"
      ]
    },
    "components/Features/Events/components/shared/JoinNowBtn.jsx": {
      "purpose": "Handles joinnowbtn functionality",
      "props": [
        "onPress: function",
        "onPressIn: function",
        "onPressOut: function",
        "activeOpacity",
        "onPress",
        "style"
      ],
      "hooks": [
        "useState - Manages component state"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "../../../../Core/UI/ChevronDoubleRight"
      ]
    },
    "components/Features/Events/components/shared/EventTitle.jsx": {
      "purpose": "Handles eventtitle functionality",
      "props": [
        "numberOfLines",
        "adjustsFontSizeToFit: function",
        "title",
        "imageUrl"
      ],
      "hooks": [
        "useState - Manages component state",
        "useEffect - Handles side effects on mount/update",
        "useState",
        "useEffect"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Manages state transitions",
        "Branches on conditions",
        "if on `imageUrl`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "expo-image"
      ]
    },
    "components/Features/Events/components/shared/EventTime.jsx": {
      "purpose": "Handles eventtime functionality",
      "props": [
        "time",
        "style"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Features/Events/components/shared/EventImage.jsx": {
      "purpose": "Handles eventimage functionality",
      "props": [
        "source",
        "imageUrl",
        "style"
      ],
      "hooks": [
        "useState - Manages component state"
      ],
      "key_logic": [
        "Branches on conditions",
        "Manages state transitions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Features/Events/components/shared/EventStage.jsx": {
      "purpose": "Handles eventstage functionality",
      "props": [
        "state"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Features/Events/components/shared/AgeRange.jsx": {
      "purpose": "Handles agerange functionality",
      "props": [
        "numberOfLines",
        "min",
        "max",
        "style"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions",
        "if on `min`",
        "if on `max`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Features/Events/components/shared/EventDescription.jsx": {
      "purpose": "Handles eventdescription functionality",
      "props": [
        "numberOfLines",
        "text"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Features/Events/components/shared/HeroDisplay.jsx": {
      "purpose": "Handles herodisplay functionality",
      "props": [
        "imageUrl",
        "title",
        "event",
        "style"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "./EventImage",
        "./EventTitle"
      ]
    },
    "components/Features/Events/components/shared/EventDate.jsx": {
      "purpose": "Handles eventdate functionality",
      "props": [
        "event",
        "style"
      ],
      "key_logic": [
        "Evaluates capacity limits",
        "Branches on conditions",
        "if on `isTBA`"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles",
        "@expo/vector-icons/Feather"
      ]
    },
    "components/Features/Events/components/shared/EventPrice.jsx": {
      "purpose": "Handles eventprice functionality",
      "props": [
        "numberOfLines",
        "price",
        "currency",
        "style"
      ],
      "key_logic": [
        "Branches on conditions"
      ],
      "depends_on": [
        "react",
        "react-native",
        "react-native-unistyles"
      ]
    },
    "components/Features/Events/components/shared/__tests__/EventStatus.test.jsx": {
      "purpose": "Renders eventstatus.test UI",
      "props": [
        "status: array | object"
      ],
      "hooks": [
        "useEventDisplayState.mockImplementation"
      ],
      "key_logic": [
        "Renders gender-based progress",
        "sets `consoleWarn`"
      ],
      "depends_on": [
        "react",
        "@testing-library/react-native",
        "../EventStatus",
        "../../../../../Core/Middleware/state/eventDisplayState"
      ]
    },
    "components/Features/Hub/mocks/organizer.data.js": {
      "purpose": "Handles organizer.data functionality",
      "key_logic": [
        "Executes core functionality"
      ]
    },
    "components/Features/Hub/mocks/venue.data.js": {
      "purpose": "Handles venue.data functionality",
      "key_logic": [
        "Evaluates capacity limits"
      ]
    },
    "components/Features/Hub/mocks/attendee.data.js": {
      "purpose": "Handles attendee.data functionality",
      "key_logic": [
        "Evaluates capacity limits"
      ]
    },
    "components/Features/Hub/components/Attendee/AttendeeTerms.jsx": {
      "purpose": "Handles attendeeterms functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/attendee.data"
      ]
    },
    "components/Features/Hub/components/Attendee/HowToAttend.jsx": {
      "purpose": "Handles howtoattend functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/attendee.data"
      ]
    },
    "components/Features/Hub/components/Attendee/AttendeeGuide.jsx": {
      "purpose": "Handles attendeeguide functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/attendee.data"
      ]
    },
    "components/Features/Hub/components/Attendee/AttendeeFaq.jsx": {
      "purpose": "Handles attendeefaq functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/attendee.data"
      ]
    },
    "components/Features/Hub/components/Organizer/OrganizerGuide.jsx": {
      "purpose": "Handles organizerguide functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/organizer.data"
      ]
    },
    "components/Features/Hub/components/Organizer/OrganizerFaq.jsx": {
      "purpose": "Handles organizerfaq functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/organizer.data"
      ]
    },
    "components/Features/Hub/components/Organizer/OrganizerTerms.jsx": {
      "purpose": "Handles organizerterms functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/organizer.data"
      ]
    },
    "components/Features/Hub/components/Organizer/HowToOrganize.jsx": {
      "purpose": "Handles howtoorganize functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/organizer.data"
      ]
    },
    "components/Features/Hub/components/shared/HubContent.jsx": {
      "purpose": "Handles hubcontent functionality",
      "key_logic": [
        "Responds to scroll events",
        "Branches on conditions",
        "Iterates over data",
        "maps `sections`"
      ],
      "depends_on": [
        "react",
        "react-native"
      ]
    },
    "components/Features/Hub/components/Venue/HowToHost.jsx": {
      "purpose": "Handles howtohost functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/venue.data"
      ]
    },
    "components/Features/Hub/components/Venue/VenueGuide.jsx": {
      "purpose": "Handles venueguide functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/venue.data"
      ]
    },
    "components/Features/Hub/components/Venue/VenueTerms.jsx": {
      "purpose": "Handles venueterms functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/venue.data"
      ]
    },
    "components/Features/Hub/components/Venue/VenueFaq.jsx": {
      "purpose": "Handles venuefaq functionality",
      "props": [
        "title"
      ],
      "key_logic": [
        "Executes core functionality"
      ],
      "depends_on": [
        "react",
        "react-native",
        "../shared/HubContent",
        "../../mocks/venue.data"
      ]
    }
  },
  "file_count": 0,
  "js_files_total": 0,
  "coverage_percentage": 100.0,
  "exported_at": "2025-03-11T21:49:10.730105Z",
  "export_filename": "codebase_graph_20250311T214910Z.json"
}